%!PS-Adobe-2.0 EPSF-2.0
%%Title: 
%%Creator: OpenWrite
%%CreationDate: Mon Jul 29 16:02:38 1996
%%For: wfc
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 0 0 299 133
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.1
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{2 copy 3 ne or{_NXDoImageOp}{4 index dup 8 ne exch 4 ne and{_NXDoImageOp}{
		pop pop save 6 1 roll 12 dict begin/Proc exch def/Res 0 string def
		/Alloc{2 index length mul 2 add dup 2 index load length gt{1.2 mul round cvi string def}{pop pop}ifelse}def
		1 index 8 eq{/Unpack{.34 Alloc}def}{
			/Wid 4 index 3 mul def exch pop 8 exch/Str1 0 string def/Lim Wid def
			/Unpack{.67 Alloc/Str1 2 Alloc 0 exch Lim exch
				{dup -4 bitshift 17 mul Str1 exch 4 index exch put 15 and 17 mul Str1 exch 3 index 1 add exch put
				2 sub dup 0 le{0 lt Wid exch{exch 1 sub exch}if}if exch 2 add exch
				}forall/Lim exch def Str1 exch 0 exch getinterval
			}def
		}ifelse
		/Ops[{.3 mul add 1}{.59 mul add 2}{.11 mul add round cvi Res exch 2 index exch put 1 add 0.0 0}]def/Val 0.0 def/Phase 0 def
		{0 Val Phase Proc/Res Unpack{exch Ops exch get exec}forall/Phase exch def/Val exch def Res exch 0 exch getinterval}
		image end restore}ifelse}ifelse
	}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

gsave
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
%%EndSetup
gsave
0 0 1000 1000 rectclip
0 0 299 133 rectclip
0.000000 0.000000 transform
gsave __NXbasematrix setmatrix itransform translate
0 0 299 133 rectclip
0 0 translate
0 rotate
0.698131 0.692483 scale
gsave
-114 -11 translate

/__NXEPSSave save def /showpage {} def
_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
/_NXcimage where{pop}{/_NXcimage /colorimage load def}ifelse /colorimage{dup 3 eq{true 2 index{1 index}{1}ifelse 7 add 1 roll _NXCalibratedImage}{_NXcimage}ifelse}def}if
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath count /__NXEPSOpCount exch def /__NXEPSDictCount countdictstack def
%%BeginDocument: /Users/wfc/CalliopeDocs/Tutorial/Lessons/tutorial.openbook/Lesson 7: Neume Notation.open/graphic_6.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: 
%%Creator: SuperDraw
%%CreationDate: Tue Jul  4 17:57:14 1995
%%For: wfc
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 114 11 542 203
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.1
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{2 copy 3 ne or{_NXDoImageOp}{4 index dup 8 ne exch 4 ne and{_NXDoImageOp}{
		pop pop save 6 1 roll 12 dict begin/Proc exch def/Res 0 string def
		/Alloc{2 index length mul 2 add dup 2 index load length gt{1.2 mul round cvi string def}{pop pop}ifelse}def
		1 index 8 eq{/Unpack{.34 Alloc}def}{
			/Wid 4 index 3 mul def exch pop 8 exch/Str1 0 string def/Lim Wid def
			/Unpack{.67 Alloc/Str1 2 Alloc 0 exch Lim exch
				{dup -4 bitshift 17 mul Str1 exch 4 index exch put 15 and 17 mul Str1 exch 3 index 1 add exch put
				2 sub dup 0 le{0 lt Wid exch{exch 1 sub exch}if}if exch 2 add exch
				}forall/Lim exch def Str1 exch 0 exch getinterval
			}def
		}ifelse
		/Ops[{.3 mul add 1}{.59 mul add 2}{.11 mul add round cvi Res exch 2 index exch put 1 add 0.0 0}]def/Val 0.0 def/Phase 0 def
		{0 Val Phase Proc/Res Unpack{exch Ops exch get exec}forall/Phase exch def/Val exch def Res exch 0 exch getinterval}
		image end restore}ifelse}ifelse
	}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

gsave
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/linear {
    /te exch def /ts exch def /ns exch def /nd ns 1 sub def ns 1 le {
        /ns 1 def /nd 1 def
    } if /dy te ts sub ns div def /factor te ts sub nd div def 1 index sub factor mul exch 8 2 roll 1 index sub factor mul exch 8 2 roll 1 index sub factor mul exch 8 2 roll 1 index sub factor mul exch 8 2 roll 6 index 5 index 4 index 3 index setcmykcolor ts dy te {
        0 exch 1 dy rectfill 1 index add 8 2 roll 1 index add 8 2 roll 1 index add 8 2 roll 1 index add 8 2 roll 6 index 5 index 4 index 3 index setcmykcolor
    } for pop pop pop pop pop pop pop pop
} bind def /alinear {
    /te exch def /ts exch def /ns exch def /nd ns 1 sub def ns 1 le {
        /ns 1 def /nd 1 def
    } if /dy te ts sub ns div def /factor te ts sub nd div def 1 index sub factor mul exch 8 2 roll 1 index sub factor mul exch 8 2 roll 1 index sub factor mul exch 8 2 roll 1 index sub factor mul exch 8 2 roll 6 index setalpha 4 index 3 index 2 index setrgbcolor ts dy te {
        0 exch 1 dy rectfill 1 index add 8 2 roll 1 index add 8 2 roll 1 index add 8 2 roll 1 index add 8 2 roll 6 index setalpha 4 index 3 index 2 index setrgbcolor
    } for pop pop pop pop pop pop pop pop
} def /radial {
    /te exch def /ts exch def /fy exch def /fx exch def /ns exch def /nd ns 1 sub def ns 1 le {
        /ns 1 def /nd 1 def
    } if /dy te ts sub ns div def /factor te ts sub nd div def 1 index sub factor mul exch 8 2 roll 1 index sub factor mul exch 8 2 roll 1 index sub factor mul exch 8 2 roll 1 index sub factor mul exch 8 2 roll 6 index 5 index 4 index 3 index setcmykcolor fx dy mul 0.5 1 te sub fx mul add fy dy mul 0.5 1 te sub fy mul add /total 2 sqrt 0.5 mul def te total mul dy total mul neg ts total mul {
        newpath 3 index 2 index 2 index 0 360 arc fill pop 1 index add 12 2 roll 1 index add 12 2 roll 1 index add 12 2 roll 1 index add 12 2 roll 1 index add 12 2 roll 1 index add 12 2 roll 10 index 9 index 8 index 7 index setcmykcolor
    } for pop pop pop pop pop pop pop pop pop pop pop pop
} bind def /aradial {
    /te exch def /ts exch def /fy exch def /fx exch def /ns exch def /nd ns 1 sub def ns 1 le {
        /ns 1 def /nd 1 def
    } if /dy te ts sub ns div def /factor te ts sub nd div def 1 index sub factor mul exch 8 2 roll 1 index sub factor mul exch 8 2 roll 1 index sub factor mul exch 8 2 roll 1 index sub factor mul exch 8 2 roll 6 index setalpha 4 index 3 index 2 index setrgbcolor fx dy mul 0.5 1 te sub fx mul add fy dy mul 0.5 1 te sub fy mul add /total 2 sqrt 0.5 mul def te total mul dy total mul neg ts total mul {
        newpath 3 index 2 index 2 index 0 360 arc fill pop 1 index add 12 2 roll 1 index add 12 2 roll 1 index add 12 2 roll 1 index add 12 2 roll 1 index add 12 2 roll 1 index add 12 2 roll 10 index setalpha 8 index 7 index 6 index setrgbcolor
    } for pop pop pop pop pop pop pop pop pop pop pop pop
} def /getnumpaths {
    /nPaths 0 def {
        /y exch def /x exch def /nPaths nPaths 1 add def
    } {
        /y exch def /x exch def
    } {
        /y3 exch def /x3 exch def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
    } {
        
    } pathforall nPaths
} def /getpathinfo {
    /pathNum exch def /numMoveto 0 def /numLineto 0 def /numCurveto 0 def /numClosepath 0 def {
        /y exch def /x exch def /numMoveto numMoveto 1 add def
    } {
        /y exch def /x exch def numMoveto pathNum eq {
            /numLineto numLineto 1 add def
        } if
    } {
        /y3 exch def /x3 exch def /y2 exch def /x2 exch def /y1 exch def /x1 exch def numMoveto pathNum eq {
            /numCurveto numCurveto 1 add def
        } if
    } {
        numMoveto pathNum eq {
            /numClosepath numClosepath 1 add def
        } if
    } pathforall numClosepath numCurveto numLineto
} def /getpathcoords {
    /pathNum exch def /numMoveto 0 def /numLineto 0 def /numCurveto 0 def /numClosepath 0 def {
        /y exch def /x exch def /numMoveto numMoveto 1 add def numMoveto pathNum eq {
            y x
        } if
    } {
        /y exch def /x exch def numMoveto pathNum eq {
            /numLineto numLineto 1 add def 1 index 1 index y x y x
        } if
    } {
        /y3 exch def /x3 exch def /y2 exch def /x2 exch def /y1 exch def /x1 exch def numMoveto pathNum eq {
            /numCurveto numCurveto 1 add def y1 x1 y2 x2 y3 x3
        } if
    } {
        numMoveto pathNum eq {
            /numClosepath numClosepath 1 add def
        } if
    } pathforall
} def
%%EndSetup
0 0 542 203 rectclip
114 11 428 192 rectclip
gsave
116 13 translate
[1 0 0 1 0 0] concat
gsave
gsave
gsave
0 0 translate
gsave
158.5 65.5 translate
0 rotate
-158.5 -65.5 translate
1 1 scale
317
131
2
[1 0 0 -1 0 131]

/_NXImageStr0 _NXImageString 0 80 getinterval def {currentfile _NXImageStr0 readhexstring pop} bind 
%%BeginBinary: 21097
image
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100
2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100
20000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000fffffff010f
20000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000eaaaaa90100
20000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e1aaa490100
200000000000000000000000000000000000000000000000000000003ffc3c0000000f00003c000000000000000000f000000000000000000000000000000000000000000000000000000e46a9190100
200000000000000000000000000000000000000000000000000000003c0f3c0000000f00003c000000000000000000f000000000000000000000000000000000000000000000000000000e91a4690100
200000000000000000000000000000000000000000000000000000003c0f3c3fc0ff0f0f003cf3c0ff0f3c0ff03fc3fc3fc3cf00000000000000000000000000000000000000000000000ea451a90100
200000000000000000000000000000000000000000000000000000003c0f3cf0f3c3cf3c003cfcf3c3cfcf3c3cf0f0f0f0f3fc00000000000000000000000000000000000000000000000ea906a90100
200000000000000000000000000000000000000000000000000000003ffc3cf0f3c00ff0003cf0f3f00f0f3c3cf000f0f0f3f000000000000000000000000000000000000000000000000ea906a90100
200000000000000000000000000000000000000000000000000000003c0f3cf0f3c00ff0003cf0f03f0f0f3ffcf000f0f0f3c000000000000000000000000000000000000000000000000ea451a90100
200000000000000000000000000000000000000000000000000000003c0f3cf0f3c00f3c003cf0f00fcf0f3c00f000f0f0f3c000000000000000000000000000000000000000000000000e91a4690100
200000000000000000000000000000000000000000000000000000003c0f3cf0f3c3cf0f003cf0f3c3cfcf3c3cf0f0f3f0f3c000000000000000000000000000000000000000000000000e46a9190100
200000000000000000000000000000000000000000000000000000003ffc3c3fc0ff0f03c03cf0f0ff0f3c0ff03fc03c3fc3c000000000000000000000000000000000000000000000000e1aaa490100
20000000000000000000000000000000000000000000000000000000000000000000000000000000000f00000000000000000000000000000000000000000000000000000000000000000eaaaaa90100
20000000000000000000000000000000000000000000000000000000000000000000000000000000000f00000000000000000000000000000000000000000000000000000000000000000d555555013f
20000000000000000000000000000000000000000000000000000000000000000000000000000000000f0000000000000000000000000000000000000000000000000000000000000000000000000100
2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100
2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100
2555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555500
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0f
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3f
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaa55555555555555555555555555555555555555555555555555555555555555aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3f
2aaaa7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0f
2aaaa7aaaaaaaaaaaaaaaaaaa95555555555555556aaaaaaaaaaaaaaaaaaaaaaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaa7aaaaaaaaaaaaaaaaaaa9555555555555555eaaaaaaaaaaaaaaaaaaaaaaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaa7aaaaaaaaaaaaaaaaaaa97fffffffffffffeeaaaaaaaaaaaaaaaaaaaaaaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaa7aaaaaaaaaaaaaaaaaaa97fffffffffffffeeaaaaaaaaaaaaaaaaaaaaaaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa03
2aaaa7aaaaaaaaaaaaaaaaaaa97fffffffffffffeeaaaaaaaaaaaaaaaaaaaaaaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3c
2aaaa7aaaaaaaaaaaaaaaaaaa97fffffffffffffeeaaaaaaaaaaaaaaaaaaaaaaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaa7aa2a2a28aaa28a2aaaa97fffffffffffffeeaaaaaaaaaaaaaaaaaaaaaaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaa7aa2a2a2aaaa28a2aaaa97ffffffffffcffeeaaaaaaaaaaaaaaaaaaaaaaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaa7aa2a2a28a8220220aaa97ffffffffff0ffeeaa0aa0aaaaaaaaaaaaaaaaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaa7aa8a28a8a2828a0a28a97fffffffffccffeea8a28a2aaaaaaaaaaaaaaaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaa7aa8888a8a2a28a2a2aa97fffffffff3cffeea8aa8aaaaaaaaaaaaaaaaaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaa7aa8888a8a2a28a2a2aa97ffffffffcfcffeeaa0aa0aaaaaaaaaaaaaaaaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaa7aaa2a2a8a2a28a2a2aa97ffffffffc003feeaaa2aa2aaabffffffffffff2abffffffffffff2abffffffffffff2abffffffffffff2abffffffffffff2abffffffffffff2abffffffffffff2aa00
2aaaa7aaa2a2a8a2828a2a2aa97ffffffffffcffeea8a28a2aaabfffffffffffd2abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92aa00
2aaaa7aaa2a2a8a822822a28a97ffffffffffcffeeaa0aa0aaaabfffffffffffd2abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92aa00
2aaaa7aaaaaaaaaaaaaaaaaaa97fffffffffffffeeaaaaaaaaaabfffffffffffd2abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92aa00
2aaaa7aaaaaaaaaaaaaaaaaaa97fffffffffffffeeaaaaaaaaaabfffffffffffd2abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92aa00
2aaaa7aaaaaaaaaaaaaaaaaaa97fffffffffffffeeaaaaaaaaaabfffffffffffd2abaaaaa82aaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92aa00
2aaaa7aaaaaaaaaaaaaaaaaaa97fffffffffffffeeaaaaaaaaaabff00000000fd2abaaaaa02aaaa92abaaaaa82aaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92aa00
2aaaa7aaaaaaaaaaaaaaaaaaa9aaaaaaaaaaaaaaaeaaaaaaaaaabff00000000fd2abaaaaa02aaaa92abaaaaaa2aaaa92abaaaaaaaaaaa92abaaaaaaaa8aa92abaaaaaaaaaaa92abaaaaa2a2aaa92aa00
2aaaa7aaaaaaaaaaaaaaaaaaabfffffffffffffffeaaaaaaaaaabff00000000fd2abaaaaa02aaaa92abaaaaaa2aaaa92abaaaa8002aaa92abaaaaaaaa8aa92abaaaaaaaaaaa92abaaaaa2a2aaa92aa0f
2aaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabff00000000fd2abaaaaa02aaaa92abaaaaaa2aaaa92abaaaaaaa8aaa92abaaaaaaaa8aa92abaaaaa02aaaa92abaaaa8a8aaaa92aa00
2aaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabff00000000fd2abaaaaa02aaaa92abaaaaaa2aaaa92abaaaaaaa82aa92abaaaaaaaa2aa92abaaaaa00aaaa92abaaaa8a8aaaa92aa00
2aaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabff00000000fd2abaaaaaa2aaaa92abaaaaaa2aaaa92abaaa08a2a2aa92abaaaaaaaa2aa92abaaaaa00aaaa92abaaaa2a2aaaa92aa00
2aaaa7aaaaaaaaaaaaaaaaaaa95555555555555556aaaaaaaaaabff00000000fd2abaaaaaa2aaaa92abaaaaaa2aaaa92abaaa8000a2aa92abaaaaaaaa2aa92abaaaaaa0aaaa92abaaaa2a2aaaa92aa00
2aaaa7aaaaaaaaaaaaaaaaaaa9555555555555555eaaaaaaaaaabff00000000fd2abaaaaaa2aaaa92abaaaaa02aaaa92abaaa8a2822aa92abaa8a22a8aaa92abaaaaaa2aaaa92abaaaa2a2aaaa92aa00
2aaaa7aaaaaaaaaaaaaaaaaaa97fffffffffffffeeaaaaaaaaaabff00000000fd2abaaaaaa2aaaa92abaaaaa02aaaa92abaaaaaaa0aaa92abaaa000a8aaa92abaaaaa8aaaaa92abaaa8a8aaaaa92aa00
2aaaa7aaaaaaaaaaaaaaaaaaa97fffffffffffffeeaaaaaaaaaabff00000000fd2abaaaaaa2aaaa92abaaaaa02aaaa92abaaaaaaa8aaa92abaaa00022aaa92abaaaaa2aaaaa92abaaa8a8aaaaa92aa00
2aaaa7aaaaaaaaaaaaaaaaaaa97fffffffffffffeeaaaaaaaaaabff00000000fd2abaaaaaa2aaaa92abaaaaa02aaaa92abaaaaaaaaaaa92abaaa88a0aaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92aa00
2aaaa7aaaaaaaaaaaaaaaaaaa97fffffffffffffeeaaaaaaaaaabff00000000fd2abaaaaa82aaaa92abaaaaa02aaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92aa00
2aaaa7a2aa2aaaa2aaaa2aa8a97fffffffffffffeeaaaaaaaaaabfffffffffffd2abaaaaaaaaaaa92abaaaaa82aaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92aa00
2aaaa7a2aa2aaaaaaaaa2aa8a97ffffffffffcffeeaaaaaaaaaabfffffffffffd2abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92aa00
2aaaa7a2aa2a02a2a08a20a0297ffffffffff0ffeeaaaaaaaaaabfffffffffffd2abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92aa00
2aaaa7a2aa28a8a28a0a0a28a97fffffffffccffeea82a82aaaabfffffffffffd2abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92aa00
2aaaa7a00028a8a28a8a2a28a97fffffffff3cffeea28a28aaaabfffffffffffd2abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92abaaaaaaaaaaa92aa00
2aaaa7a2aa2800a28a8a2a28a97ffffffffcfcffeea2aa2aaaaab5555555555552ab5555555555552ab5555555555552ab5555555555552ab5555555555552ab5555555555552ab5555555555552aa00
2aaaa7a2aa28aaa28a8a2a28a97ffffffffc003feea82a82aaaa80000000000002a80000000000002a80000000000002a80000000000002a80000000000002a80000000000002a80000000000002aa00
2aaaa7a2aa28a8a28a0a2a28a97ffffffffffcffeeaa8aa8aaaaaaaaaaaaaaaaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaa7a2aa2a02a2a08a2a28297ffffffffffcffeea28a28aaaaaaaaaaaaaaaaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaa7aaaaaaaaaaaa8aaaaaa97fffffffffffffeea82a82aaaaaaaaaaaaaaaaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaa7aaaaaaaaaa8a8aaaaaa97fffffffffffffeeaaaaaaaaaaaaaaaaaaaaaaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaa7aaaaaaaaaaa02aaaaaa97fffffffffffffeeaaaaaaaaaaaaaaaaaaaaaaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0f
2aaaa7aaaaaaaaaaaaaaaaaaa97fffffffffffffeeaaaaaaaaaaaaaaaaaaaaaaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaa7aaaaaaaaaaaaaaaaaaa9aaaaaaaaaaaaaaaeaaaaaaaaaaaaaaaaaaaaaaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaa7aaaaaaaaaaaaaaaaaaabfffffffffffffffeaaaaaaaaaaaaaaaaaaaaaaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3f
2aaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaa75555555555555555555555555555555555555555555555555555555555557aaaaaaaaaaaaaaaaaaaaaaaaaaaaabfffffffffffffffffffffffffff2aabfffffffffffffffffffffffffff2aa00
2aaaa7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaa92aabaaaaaaaaaaaaaaaaaaaaaaaaaa92aa00
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaa92aabaaaaaaaaaaaaaaaaaaaaaaaaaa92aa00
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaa92aabaaaaaaaaaaaaaaaaaaaaaaaaaa92aa00
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaa92aabaaaaaaaaaaaaaaaaaaaaaaaaaa92aa3f
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaa92aabaaaaaaaaaaaaaaaaaaaaaaaaaa92aa03
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaa92aabaaaaaaaaaaaaaaaaaaaaaaaaaa92aa00
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaa8000a802aa802a8aaaaaaa92aabaaaaaaaa802a0008000aaaaaaa92aa00
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaa2aa2a8aa2a8a8aaaaaaa92aabaaaaaaaa2a8a2aaaa2aaaaaaaa92aa00
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaa2a8aaa28aaa28aaaaaaa92aabaaaaaaaa2aaa2aaaa2aaaaaaaa92aa00
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaa2a8aaa28aaa28aaaaaaa92aabaaaaaaaa82aa2aaaa2aaaaaaaa92aa00
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaa2a8aaa28aaa28aaaaaaa92aabaaaaaaaaa82a000aa2aaaaaaaa92aa0f
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaa2a8aaa28aaa28aaaaaaa92aabaaaaaaaaaa8a2aaaa2aaaaaaaa92aa00
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaa2a8aaa28aaa28aaaaaaa92aabaaaaaaaa2a8a2aaaa2aaaaaaaa92aa00
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaa2aa2a8aa2a8a8aaaaaaa92aabaaaaaaaa2a8a2aaaa2aaaaaaaa92aa00
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaa2aa802aa802a800aaaaa92aabaaaaaaaa802a000aa2aaaaaaaa92aa00
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaa92aabaaaaaaaaaaaaaaaaaaaaaaaaaa92aa00
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaa92aabaaaaaaaaaaaaaaaaaaaaaaaaaa92aa00
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaa92aabaaaaaaaaaaaaaaaaaaaaaaaaaa92aa3f
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaa92aabaaaaaaaaaaaaaaaaaaaaaaaaaa92aa00
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaa92aabaaaaaaaaaaaaaaaaaaaaaaaaaa92aa00
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaa92aabaaaaaaaaaaaaaaaaaaaaaaaaaa92aa00
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab5555555555555555555555555552aab5555555555555555555555555552aa00
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa80000000000000000000000000002aa80000000000000000000000000002aa00
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f
%%EndBinary
grestore
grestore
grestore
grestore
grestore
gsave
297 179 translate
[1 0 0 1 0 0] concat
gsave
gsave
1 -1 scale
0 -22 translate
gsave
2 17 translate
/Helvetica findfont 18 scalefont [1 0 0 -1 0 0] makefont
108
exch
defineuserobject
108 execuserobject setfont
0 setgray
0 0 moveto
(C) show
12.996 0 moveto
(h) show
23.004 0 moveto
(a) show
33.012001 0 moveto
(n) show
43.019997 0 moveto
(t) show
48.023998 0 moveto
( ) show
53.028 0 moveto
(g) show
63.035995 0 moveto
(u) show
73.043999 0 moveto
(i) show
77.039993 0 moveto
(d) show
87.047997 0 moveto
(e) show
97.055992 0 moveto
( ) show
102.059998 0 moveto
(w) show
115.055992 0 moveto
(i) show
119.051994 0 moveto
(t) show
124.055992 0 moveto
(h) show
134.063995 0 moveto
( ) show
139.067993 0 moveto
(t) show
144.071991 0 moveto
(a) show
154.079987 0 moveto
(i) show
158.075989 0 moveto
(l) show
162.071991 0 moveto
( ) show
167.075989 0 moveto
(u) show
177.084 0 moveto
(p) show
grestore
grestore
grestore
grestore
gsave
300 82 translate
[1 0 0 1 0 0] concat
gsave
gsave
0 setlinejoin 0 setlinecap 0 0 eq {
    10 setmiterlimit
} if
2 setlinewidth
72 90 moveto
72 90 24.85936 31.074194 6.876518 8.595642 curveto
0 nxsetgray
matrix currentmatrix matrix defaultmatrix setmatrix 1 1 scale stroke setmatrix
grestore
gsave
0 setlinejoin 0 setlinecap
0 setlinewidth
0 0 moveto -128.659821 dup rotate 2 dup scale -7 -2 rlineto 1 2 rlineto -1 2 rlineto closepath 1 2 div dup scale neg rotate
0 nxsetgray
gsave
fill
grestore
matrix currentmatrix matrix defaultmatrix setmatrix 1 1 scale stroke setmatrix
grestore
grestore
grestore
gsave
421 38 translate
[1 0 0 1 0 0] concat
gsave
gsave
0 setlinejoin 0 setlinecap 0 0 eq {
    10 setmiterlimit
} if
2 setlinewidth
71 15 moveto
71 15 30.604799 6.465803 10.768063 2.274943 curveto
0 nxsetgray
matrix currentmatrix matrix defaultmatrix setmatrix 1 1 scale stroke setmatrix
grestore
gsave
0 setlinejoin 0 setlinecap
0 setlinewidth
0 0 moveto -168.070679 dup rotate 2 dup scale -7 -2 rlineto 1 2 rlineto -1 2 rlineto closepath 1 2 div dup scale neg rotate
0 nxsetgray
gsave
fill
grestore
matrix currentmatrix matrix defaultmatrix setmatrix 1 1 scale stroke setmatrix
grestore
grestore
grestore
gsave
499 47 translate
[1 0 0 1 0 0] concat
gsave
gsave
1 -1 scale
0 -22 translate
gsave
2 17 translate
108 execuserobject setfont
0 0 moveto
0 nxsetgray
(S) show
12.006 0 moveto
0 nxsetgray
(E) show
24.011999 0 moveto
0 nxsetgray
(T) show
grestore
grestore
grestore
grestore
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
count __NXEPSOpCount sub {pop} repeat countdictstack __NXEPSDictCount sub {end} repeat __NXEPSSave restore
grestore
grestore
grestore
%%Trailer
