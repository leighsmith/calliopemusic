%!PS-Adobe-2.0 EPSF-2.0
%%Title: 
%%Creator: OpenWrite
%%CreationDate: Mon Jul 29 16:03:04 1996
%%For: wfc
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 0 0 451 101
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.1
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{2 copy 3 ne or{_NXDoImageOp}{4 index dup 8 ne exch 4 ne and{_NXDoImageOp}{
		pop pop save 6 1 roll 12 dict begin/Proc exch def/Res 0 string def
		/Alloc{2 index length mul 2 add dup 2 index load length gt{1.2 mul round cvi string def}{pop pop}ifelse}def
		1 index 8 eq{/Unpack{.34 Alloc}def}{
			/Wid 4 index 3 mul def exch pop 8 exch/Str1 0 string def/Lim Wid def
			/Unpack{.67 Alloc/Str1 2 Alloc 0 exch Lim exch
				{dup -4 bitshift 17 mul Str1 exch 4 index exch put 15 and 17 mul Str1 exch 3 index 1 add exch put
				2 sub dup 0 le{0 lt Wid exch{exch 1 sub exch}if}if exch 2 add exch
				}forall/Lim exch def Str1 exch 0 exch getinterval
			}def
		}ifelse
		/Ops[{.3 mul add 1}{.59 mul add 2}{.11 mul add round cvi Res exch 2 index exch put 1 add 0.0 0}]def/Val 0.0 def/Phase 0 def
		{0 Val Phase Proc/Res Unpack{exch Ops exch get exec}forall/Phase exch def/Val exch def Res exch 0 exch getinterval}
		image end restore}ifelse}ifelse
	}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

gsave
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
%%EndSetup
gsave
0 0 1000 1000 rectclip
0 0 451 101 rectclip
0.000000 0.000000 transform
gsave __NXbasematrix setmatrix itransform translate
0 0 451 101 rectclip
0 0 translate
0 rotate
0.997788 0.997788 scale
gsave
-56 -559 translate

/__NXEPSSave save def /showpage {} def
_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
/_NXcimage where{pop}{/_NXcimage /colorimage load def}ifelse /colorimage{dup 3 eq{true 2 index{1 index}{1}ifelse 7 add 1 roll _NXCalibratedImage}{_NXcimage}ifelse}def}if
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath count /__NXEPSOpCount exch def /__NXEPSDictCount countdictstack def
%%BeginDocument: /Users/wfc/CalliopeDocs/Tutorial/Lessons/tutorial.openbook/Lesson 10: A Lute Song.open/graphic_8.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: 
%%Creator: SuperDraw
%%CreationDate: Wed Feb 14 18:20:50 1996
%%For: wfc
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 56 559 508 660
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.1
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{2 copy 3 ne or{_NXDoImageOp}{4 index dup 8 ne exch 4 ne and{_NXDoImageOp}{
		pop pop save 6 1 roll 12 dict begin/Proc exch def/Res 0 string def
		/Alloc{2 index length mul 2 add dup 2 index load length gt{1.2 mul round cvi string def}{pop pop}ifelse}def
		1 index 8 eq{/Unpack{.34 Alloc}def}{
			/Wid 4 index 3 mul def exch pop 8 exch/Str1 0 string def/Lim Wid def
			/Unpack{.67 Alloc/Str1 2 Alloc 0 exch Lim exch
				{dup -4 bitshift 17 mul Str1 exch 4 index exch put 15 and 17 mul Str1 exch 3 index 1 add exch put
				2 sub dup 0 le{0 lt Wid exch{exch 1 sub exch}if}if exch 2 add exch
				}forall/Lim exch def Str1 exch 0 exch getinterval
			}def
		}ifelse
		/Ops[{.3 mul add 1}{.59 mul add 2}{.11 mul add round cvi Res exch 2 index exch put 1 add 0.0 0}]def/Val 0.0 def/Phase 0 def
		{0 Val Phase Proc/Res Unpack{exch Ops exch get exec}forall/Phase exch def/Val exch def Res exch 0 exch getinterval}
		image end restore}ifelse}ifelse
	}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

gsave
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/linear {
    /te exch def /ts exch def /ns exch def /nd ns 1 sub def ns 1 le {
        /ns 1 def /nd 1 def
    } if /dy te ts sub ns div def /factor te ts sub nd div def 1 index sub factor mul exch 8 2 roll 1 index sub factor mul exch 8 2 roll 1 index sub factor mul exch 8 2 roll 1 index sub factor mul exch 8 2 roll 6 index 5 index 4 index 3 index setcmykcolor ts dy te {
        0 exch 1 dy rectfill 1 index add 8 2 roll 1 index add 8 2 roll 1 index add 8 2 roll 1 index add 8 2 roll 6 index 5 index 4 index 3 index setcmykcolor
    } for pop pop pop pop pop pop pop pop
} bind def /alinear {
    /te exch def /ts exch def /ns exch def /nd ns 1 sub def ns 1 le {
        /ns 1 def /nd 1 def
    } if /dy te ts sub ns div def /factor te ts sub nd div def 1 index sub factor mul exch 8 2 roll 1 index sub factor mul exch 8 2 roll 1 index sub factor mul exch 8 2 roll 1 index sub factor mul exch 8 2 roll 6 index setalpha 4 index 3 index 2 index setrgbcolor ts dy te {
        0 exch 1 dy rectfill 1 index add 8 2 roll 1 index add 8 2 roll 1 index add 8 2 roll 1 index add 8 2 roll 6 index setalpha 4 index 3 index 2 index setrgbcolor
    } for pop pop pop pop pop pop pop pop
} def /radial {
    /te exch def /ts exch def /fy exch def /fx exch def /ns exch def /nd ns 1 sub def ns 1 le {
        /ns 1 def /nd 1 def
    } if /dy te ts sub ns div def /factor te ts sub nd div def 1 index sub factor mul exch 8 2 roll 1 index sub factor mul exch 8 2 roll 1 index sub factor mul exch 8 2 roll 1 index sub factor mul exch 8 2 roll 6 index 5 index 4 index 3 index setcmykcolor fx dy mul 0.5 1 te sub fx mul add fy dy mul 0.5 1 te sub fy mul add /total 2 sqrt 0.5 mul def te total mul dy total mul neg ts total mul {
        newpath 3 index 2 index 2 index 0 360 arc fill pop 1 index add 12 2 roll 1 index add 12 2 roll 1 index add 12 2 roll 1 index add 12 2 roll 1 index add 12 2 roll 1 index add 12 2 roll 10 index 9 index 8 index 7 index setcmykcolor
    } for pop pop pop pop pop pop pop pop pop pop pop pop
} bind def /aradial {
    /te exch def /ts exch def /fy exch def /fx exch def /ns exch def /nd ns 1 sub def ns 1 le {
        /ns 1 def /nd 1 def
    } if /dy te ts sub ns div def /factor te ts sub nd div def 1 index sub factor mul exch 8 2 roll 1 index sub factor mul exch 8 2 roll 1 index sub factor mul exch 8 2 roll 1 index sub factor mul exch 8 2 roll 6 index setalpha 4 index 3 index 2 index setrgbcolor fx dy mul 0.5 1 te sub fx mul add fy dy mul 0.5 1 te sub fy mul add /total 2 sqrt 0.5 mul def te total mul dy total mul neg ts total mul {
        newpath 3 index 2 index 2 index 0 360 arc fill pop 1 index add 12 2 roll 1 index add 12 2 roll 1 index add 12 2 roll 1 index add 12 2 roll 1 index add 12 2 roll 1 index add 12 2 roll 10 index setalpha 8 index 7 index 6 index setrgbcolor
    } for pop pop pop pop pop pop pop pop pop pop pop pop
} def /getnumpaths {
    /nPaths 0 def {
        /y exch def /x exch def /nPaths nPaths 1 add def
    } {
        /y exch def /x exch def
    } {
        /y3 exch def /x3 exch def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
    } {
        
    } pathforall nPaths
} def /getpathinfo {
    /pathNum exch def /numMoveto 0 def /numLineto 0 def /numCurveto 0 def /numClosepath 0 def {
        /y exch def /x exch def /numMoveto numMoveto 1 add def
    } {
        /y exch def /x exch def numMoveto pathNum eq {
            /numLineto numLineto 1 add def
        } if
    } {
        /y3 exch def /x3 exch def /y2 exch def /x2 exch def /y1 exch def /x1 exch def numMoveto pathNum eq {
            /numCurveto numCurveto 1 add def
        } if
    } {
        numMoveto pathNum eq {
            /numClosepath numClosepath 1 add def
        } if
    } pathforall numClosepath numCurveto numLineto
} def /getpathcoords {
    /pathNum exch def /numMoveto 0 def /numLineto 0 def /numCurveto 0 def /numClosepath 0 def {
        /y exch def /x exch def /numMoveto numMoveto 1 add def numMoveto pathNum eq {
            y x
        } if
    } {
        /y exch def /x exch def numMoveto pathNum eq {
            /numLineto numLineto 1 add def 1 index 1 index y x y x
        } if
    } {
        /y3 exch def /x3 exch def /y2 exch def /x2 exch def /y1 exch def /x1 exch def numMoveto pathNum eq {
            /numCurveto numCurveto 1 add def y1 x1 y2 x2 y3 x3
        } if
    } {
        numMoveto pathNum eq {
            /numClosepath numClosepath 1 add def
        } if
    } pathforall
} def
%%EndSetup
0 0 508 659.5 rectclip
56 559.5 452 100 rectclip
gsave
237 561.5 translate
[1 0 0 1 0 0] concat
gsave
gsave
gsave
33.5 48 translate
0 rotate
-33.5 -48 translate
1 1 scale
gsave
-201 -680 translate

/__NXEPSSave save def /showpage {} def
_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
/_NXcimage where{pop}{/_NXcimage /colorimage load def}ifelse /colorimage{dup 3 eq{true 2 index{1 index}{1}ifelse 7 add 1 roll _NXCalibratedImage}{_NXcimage}ifelse}def}if
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath count /__NXEPSOpCount exch def /__NXEPSDictCount countdictstack def
%%BeginDocument: 
%!PS-Adobe-2.0 EPSF-2.0
%%Title: tab.opus
%%Creator: Calliope
%%CreationDate: Tue Sep  5 14:03:16 1995
%%For: wfc
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 201 680 268 776
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.1
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{2 copy 3 ne or{_NXDoImageOp}{4 index dup 8 ne exch 4 ne and{_NXDoImageOp}{
		pop pop save 6 1 roll 12 dict begin/Proc exch def/Res 0 string def
		/Alloc{2 index length mul 2 add dup 2 index load length gt{1.2 mul round cvi string def}{pop pop}ifelse}def
		1 index 8 eq{/Unpack{.34 Alloc}def}{
			/Wid 4 index 3 mul def exch pop 8 exch/Str1 0 string def/Lim Wid def
			/Unpack{.67 Alloc/Str1 2 Alloc 0 exch Lim exch
				{dup -4 bitshift 17 mul Str1 exch 4 index exch put 15 and 17 mul Str1 exch 3 index 1 add exch put
				2 sub dup 0 le{0 lt Wid exch{exch 1 sub exch}if}if exch 2 add exch
				}forall/Lim exch def Str1 exch 0 exch getinterval
			}def
		}ifelse
		/Ops[{.3 mul add 1}{.59 mul add 2}{.11 mul add round cvi Res exch 2 index exch put 1 add 0.0 0}]def/Val 0.0 def/Phase 0 def
		{0 Val Phase Proc/Res Unpack{exch Ops exch get exec}forall/Phase exch def/Val exch def Res exch 0 exch getinterval}
		image end restore}ifelse}ifelse
	}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

gsave
-20 453 translate
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/TP {
    transform round exch round exch itransform
} bind def /LI {
    moveto lineto
} bind def /ST {
    setlinewidth setgray stroke
} bind def /MG {
    moveto setgray
} bind def /slant {
    moveto 2 index 1 index rlineto 0 2 index rlineto 2 index neg 1 index neg rlineto closepath pop pop pop
} bind def /tie {
    scale newpath 0 0 1 10 170 arc 1 exch scale 0 0 1 170 10 arcn
} bind def /tietext {
    gsave currentpoint 3 -1 roll add exch 3 -1 roll add exch newpath gsave translate scale 0 0 1 5 175 arc 1 exch scale 0 0 1 175 5 arcn fill grestore grestore 0 rmoveto
} bind def
%%EndSetup
gsave
[0.708661 0 0 -0.708661 0 842] concat
283.633301 93.133331 94.544434 135.46666 rectclip
788.21106 149.299988 50.799995 149.299988 LI
788.21106 161.299988 50.799995 161.299988 LI
788.21106 173.299988 50.799995 173.299988 LI
788.21106 185.299988 50.799995 185.299988 LI
788.21106 197.299988 50.799995 197.299988 LI
788.21106 209.299988 50.799995 209.299988 LI
0 0.6 ST
0 296.40329 159.469986 MG
/Times-Italic findfont 18 scalefont [1 0 0 -1 0 0] makefont
59
exch
defineuserobject
59 execuserobject setfont
(a) show
0 296.40329 173.647995 MG
59 execuserobject setfont
(b) show
0 296.907288 183.469986 MG
59 execuserobject setfont
(c) show
300.90329 108.599991 300.90329 128.599991 LI
0 1 ST
/Calliope findfont 32 scalefont [1 0 0 -1 0 0] makefont
66
exch
defineuserobject
66 execuserobject setfont
0 300.90329 108.599991 MG
<8f> show
0 298.65329 212.599991 MG
59 execuserobject setfont
( ) show
0 352.96994 209.620987 MG
59 execuserobject setfont
(0) show
0 352.96994 197.68399 MG
59 execuserobject setfont
(1) show
0 352.96994 185.68399 MG
59 execuserobject setfont
(2) show
/Sonata findfont 24 scalefont [1 0 0 -1 0 0] makefont
60
exch
defineuserobject
60 execuserobject setfont
0 353.869934 128.599991 MG
(q) show
0 35.599995 338.765991 MG
/Times-Italic findfont 16 scalefont [1 0 0 -1 0 0] makefont
61
exch
defineuserobject
61 execuserobject setfont
(2) show
0 35.599995 513.75 MG
61 execuserobject setfont
(3) show
grestore
%%Trailer
%%DocumentFonts: Times-Italic
%%+ Calliope
%%+ Sonata

%%EndDocument
count __NXEPSOpCount sub {pop} repeat countdictstack __NXEPSDictCount sub {end} repeat __NXEPSSave restore
grestore
grestore
grestore
grestore
grestore
gsave
195 567 translate
[1 0 0 1 0 0] concat
gsave
0 setlinejoin 0 setlinecap 0 0 eq {
    10 setmiterlimit
} if
0.25 setlinewidth
0 4 moveto
0 4 28.358711 1.775787 42.771523 0.64537 curveto
0 nxsetgray
matrix currentmatrix matrix defaultmatrix setmatrix 1 1 scale stroke setmatrix
grestore
gsave
0 setlinejoin 0 setlinecap
0 setlinewidth
51 0 moveto -4.484604 dup rotate 1.5 dup scale -7 -2 rlineto 1 2 rlineto -1 2 rlineto closepath 1 1.5 div dup scale neg rotate
0 nxsetgray
gsave
fill
grestore
matrix currentmatrix matrix defaultmatrix setmatrix 1 1 scale stroke setmatrix
grestore
grestore
gsave
290 623 translate
[1 0 0 1 0 0] concat
gsave
0 setlinejoin 0 setlinecap 0 0 eq {
    10 setmiterlimit
} if
0.25 setlinewidth
8.223942 0.69991 moveto
21.685696 1.845591 47 4 47 4 curveto
0 nxsetgray
matrix currentmatrix matrix defaultmatrix setmatrix 1 1 scale stroke setmatrix
grestore
gsave
0 setlinejoin 0 setlinecap
0 setlinewidth
0 0 moveto 184.864517 dup rotate 1.5 dup scale -7 -2 rlineto 1 2 rlineto -1 2 rlineto closepath 1 1.5 div dup scale neg rotate
0 nxsetgray
gsave
fill
grestore
matrix currentmatrix matrix defaultmatrix setmatrix 1 1 scale stroke setmatrix
grestore
grestore
gsave
340 595 translate
[1 0 0 1 0 0] concat
gsave
1 -1 scale
0 -37 translate
gsave
2 0 162 15 rectclip
2 12 translate
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
12
exch
defineuserobject
12 execuserobject setfont
0 0 moveto
0 nxsetgray
(D) show
8.664 0 moveto
0 nxsetgray
(i) show
11.327999 0 moveto
0 nxsetgray
(a) show
18 0 moveto
0 nxsetgray
(p) show
24.671999 0 moveto
0 nxsetgray
(a) show
31.344 0 moveto
0 nxsetgray
(s) show
37.343998 0 moveto
0 nxsetgray
(o) show
44.015999 0 moveto
0 nxsetgray
(n) show
50.688 0 moveto
0 nxsetgray
( ) show
54.023998 0 moveto
0 nxsetgray
(s) show
60.023998 0 moveto
0 nxsetgray
(e) show
66.695999 0 moveto
0 nxsetgray
(l) show
69.360001 0 moveto
0 nxsetgray
(e) show
76.031998 0 moveto
0 nxsetgray
(c) show
82.031998 0 moveto
0 nxsetgray
(t) show
85.367996 0 moveto
0 nxsetgray
(i) show
88.031998 0 moveto
0 nxsetgray
(o) show
94.704002 0 moveto
0 nxsetgray
(n) show
101.375999 0 moveto
0 nxsetgray
( ) show
104.711998 0 moveto
0 nxsetgray
(f) show
108.047997 0 moveto
0 nxsetgray
(o) show
114.720001 0 moveto
0 nxsetgray
(r) show
118.715996 0 moveto
0 nxsetgray
( ) show
122.052002 0 moveto
0 nxsetgray
(I) show
125.388 0 moveto
0 nxsetgray
(t) show
128.723999 0 moveto
0 nxsetgray
(a) show
135.395996 0 moveto
0 nxsetgray
(l) show
138.059998 0 moveto
0 nxsetgray
(i) show
140.723999 0 moveto
0 nxsetgray
(a) show
147.395996 0 moveto
0 nxsetgray
(n) show
grestore
gsave
2 15 162 15 rectclip
2 27 translate
12 execuserobject setfont
0 0 moveto
0 nxsetgray
(\() show
3.996 0 moveto
0 nxsetgray
(`) show
6.66 0 moveto
0 nxsetgray
(r) show
10.656 0 moveto
0 nxsetgray
(e) show
17.327999 0 moveto
0 nxsetgray
(a) show
24 0 moveto
0 nxsetgray
(d) show
30.672001 0 moveto
0 nxsetgray
(i) show
33.335999 0 moveto
0 nxsetgray
(n) show
40.007999 0 moveto
0 nxsetgray
(g) show
46.68 0 moveto
0 nxsetgray
( ) show
50.015999 0 moveto
0 nxsetgray
(u) show
56.688 0 moveto
0 nxsetgray
(p) show
63.360001 0 moveto
0 nxsetgray
(') show
66.024002 0 moveto
0 nxsetgray
(\)) show
70.019997 0 moveto
0 nxsetgray
( ) show
73.356003 0 moveto
0 nxsetgray
(n) show
80.028 0 moveto
0 nxsetgray
(o) show
86.699997 0 moveto
0 nxsetgray
(t) show
90.036003 0 moveto
0 nxsetgray
(a) show
96.708 0 moveto
0 nxsetgray
(t) show
100.043999 0 moveto
0 nxsetgray
(i) show
102.708 0 moveto
0 nxsetgray
(o) show
109.379997 0 moveto
0 nxsetgray
(n) show
grestore
grestore
grestore
gsave
58 572 translate
[1 0 0 1 0 0] concat
gsave
1 -1 scale
0 -35 translate
gsave
2 0 170 15 rectclip
2 12 translate
12 execuserobject setfont
0 0 moveto
0 nxsetgray
(D) show
8.664 0 moveto
0 nxsetgray
(i) show
11.327999 0 moveto
0 nxsetgray
(a) show
18 0 moveto
0 nxsetgray
(p) show
24.671999 0 moveto
0 nxsetgray
(a) show
31.344 0 moveto
0 nxsetgray
(s) show
37.343998 0 moveto
0 nxsetgray
(o) show
44.015999 0 moveto
0 nxsetgray
(n) show
50.688 0 moveto
0 nxsetgray
( ) show
54.023998 0 moveto
0 nxsetgray
(s) show
60.023998 0 moveto
0 nxsetgray
(e) show
66.695999 0 moveto
0 nxsetgray
(l) show
69.360001 0 moveto
0 nxsetgray
(e) show
76.031998 0 moveto
0 nxsetgray
(c) show
82.031998 0 moveto
0 nxsetgray
(t) show
85.367996 0 moveto
0 nxsetgray
(i) show
88.031998 0 moveto
0 nxsetgray
(o) show
94.704002 0 moveto
0 nxsetgray
(n) show
101.375999 0 moveto
0 nxsetgray
( ) show
104.711998 0 moveto
0 nxsetgray
(f) show
108.047997 0 moveto
0 nxsetgray
(o) show
114.720001 0 moveto
0 nxsetgray
(r) show
118.715996 0 moveto
0 nxsetgray
( ) show
122.052002 0 moveto
0 nxsetgray
(F) show
129.384003 0 moveto
0 nxsetgray
(r) show
133.380005 0 moveto
0 nxsetgray
(e) show
140.052002 0 moveto
0 nxsetgray
(n) show
146.723999 0 moveto
0 nxsetgray
(c) show
152.723999 0 moveto
0 nxsetgray
(h) show
grestore
gsave
2 15 170 15 rectclip
2 27 translate
12 execuserobject setfont
0 0 moveto
0 nxsetgray
(\() show
3.996 0 moveto
0 nxsetgray
(`) show
6.66 0 moveto
0 nxsetgray
(r) show
10.656 0 moveto
0 nxsetgray
(e) show
17.327999 0 moveto
0 nxsetgray
(a) show
24 0 moveto
0 nxsetgray
(d) show
30.672001 0 moveto
0 nxsetgray
(i) show
33.335999 0 moveto
0 nxsetgray
(n) show
40.007999 0 moveto
0 nxsetgray
(g) show
46.68 0 moveto
0 nxsetgray
( ) show
50.015999 0 moveto
0 nxsetgray
(d) show
56.688 0 moveto
0 nxsetgray
(o) show
63.360001 0 moveto
0 nxsetgray
(w) show
72.024002 0 moveto
0 nxsetgray
(n) show
78.695999 0 moveto
0 nxsetgray
(') show
81.360001 0 moveto
0 nxsetgray
(\)) show
85.356003 0 moveto
0 nxsetgray
( ) show
88.692001 0 moveto
0 nxsetgray
(n) show
95.363998 0 moveto
0 nxsetgray
(o) show
102.035995 0 moveto
0 nxsetgray
(t) show
105.372002 0 moveto
0 nxsetgray
(a) show
112.043999 0 moveto
0 nxsetgray
(t) show
115.379997 0 moveto
0 nxsetgray
(i) show
118.043999 0 moveto
0 nxsetgray
(o) show
124.715996 0 moveto
0 nxsetgray
(n) show
grestore
grestore
grestore
gsave
238 562 translate
[1 0 0 1 0 0] concat
gsave
1 -1 scale
0 -16 translate
gsave
2 0 20 15 rectclip
2 12 translate
12 execuserobject setfont
0 0 moveto
0 nxsetgray
(\() show
3.996 0 moveto
0 nxsetgray
( ) show
7.332 0 moveto
0 nxsetgray
( ) show
10.668 0 moveto
0 nxsetgray
( ) show
14.004 0 moveto
0 nxsetgray
(\)) show
grestore
grestore
grestore
gsave
279 617 translate
[1 0 0 1 0 0] concat
gsave
1 -1 scale
0 -16 translate
gsave
2 0 22 15 rectclip
2 12 translate
12 execuserobject setfont
0 0 moveto
0 nxsetgray
(\() show
3.996 0 moveto
0 nxsetgray
( ) show
7.332 0 moveto
0 nxsetgray
( ) show
10.668 0 moveto
0 nxsetgray
( ) show
14.004 0 moveto
0 nxsetgray
(\)) show
grestore
grestore
grestore
%%Trailer
%%DocumentFonts: Times-Italic
%%+ Calliope
%%+ Sonata
%%+ Helvetica

%%EndDocument
count __NXEPSOpCount sub {pop} repeat countdictstack __NXEPSDictCount sub {end} repeat __NXEPSSave restore
grestore
grestore
grestore
%%Trailer
%%DocumentFonts: Calliope
%%+ Sonata
