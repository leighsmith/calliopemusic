%!PS-Adobe-2.0 EPSF-2.0
%%Title: 
%%Creator: OpenWrite
%%CreationDate: Mon Jul 29 15:59:32 1996
%%For: wfc
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 0 0 392 152
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.1
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{2 copy 3 ne or{_NXDoImageOp}{4 index dup 8 ne exch 4 ne and{_NXDoImageOp}{
		pop pop save 6 1 roll 12 dict begin/Proc exch def/Res 0 string def
		/Alloc{2 index length mul 2 add dup 2 index load length gt{1.2 mul round cvi string def}{pop pop}ifelse}def
		1 index 8 eq{/Unpack{.34 Alloc}def}{
			/Wid 4 index 3 mul def exch pop 8 exch/Str1 0 string def/Lim Wid def
			/Unpack{.67 Alloc/Str1 2 Alloc 0 exch Lim exch
				{dup -4 bitshift 17 mul Str1 exch 4 index exch put 15 and 17 mul Str1 exch 3 index 1 add exch put
				2 sub dup 0 le{0 lt Wid exch{exch 1 sub exch}if}if exch 2 add exch
				}forall/Lim exch def Str1 exch 0 exch getinterval
			}def
		}ifelse
		/Ops[{.3 mul add 1}{.59 mul add 2}{.11 mul add round cvi Res exch 2 index exch put 1 add 0.0 0}]def/Val 0.0 def/Phase 0 def
		{0 Val Phase Proc/Res Unpack{exch Ops exch get exec}forall/Phase exch def/Val exch def Res exch 0 exch getinterval}
		image end restore}ifelse}ifelse
	}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

gsave
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
%%EndSetup
gsave
0 0 1000 1000 rectclip
0 0 392 152 rectclip
0.000000 0.000000 transform
gsave __NXbasematrix setmatrix itransform translate
0 0 392 152 rectclip
0 0 translate
0 rotate
0.729981 0.729981 scale
gsave
-28 -597 translate

/__NXEPSSave save def /showpage {} def
_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
/_NXcimage where{pop}{/_NXcimage /colorimage load def}ifelse /colorimage{dup 3 eq{true 2 index{1 index}{1}ifelse 7 add 1 roll _NXCalibratedImage}{_NXcimage}ifelse}def}if
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath count /__NXEPSOpCount exch def /__NXEPSDictCount countdictstack def
%%BeginDocument: /Users/wfc/CalliopeDocs/Tutorial/Lessons/tutorial.openbook/Lesson 2: Text Underlay.open/graphic_20.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: tempro.opus
%%Creator: Calliope
%%CreationDate: Wed Jul  5 16:19:18 1995
%%For: wfc
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 28 597 565 805
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.1
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{2 copy 3 ne or{_NXDoImageOp}{4 index dup 8 ne exch 4 ne and{_NXDoImageOp}{
		pop pop save 6 1 roll 12 dict begin/Proc exch def/Res 0 string def
		/Alloc{2 index length mul 2 add dup 2 index load length gt{1.2 mul round cvi string def}{pop pop}ifelse}def
		1 index 8 eq{/Unpack{.34 Alloc}def}{
			/Wid 4 index 3 mul def exch pop 8 exch/Str1 0 string def/Lim Wid def
			/Unpack{.67 Alloc/Str1 2 Alloc 0 exch Lim exch
				{dup -4 bitshift 17 mul Str1 exch 4 index exch put 15 and 17 mul Str1 exch 3 index 1 add exch put
				2 sub dup 0 le{0 lt Wid exch{exch 1 sub exch}if}if exch 2 add exch
				}forall/Lim exch def Str1 exch 0 exch getinterval
			}def
		}ifelse
		/Ops[{.3 mul add 1}{.59 mul add 2}{.11 mul add round cvi Res exch 2 index exch put 1 add 0.0 0}]def/Val 0.0 def/Phase 0 def
		{0 Val Phase Proc/Res Unpack{exch Ops exch get exec}forall/Phase exch def/Val exch def Res exch 0 exch getinterval}
		image end restore}ifelse}ifelse
	}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

gsave
-20 496 translate
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/TP {
    transform round exch round exch itransform
} bind def /LI {
    moveto lineto
} bind def /ST {
    setlinewidth setgray stroke
} bind def /MG {
    moveto setgray
} bind def /slant {
    moveto 2 index 1 index rlineto 0 2 index rlineto 2 index neg 1 index neg rlineto closepath pop pop pop
} bind def /tie {
    scale newpath 0 0 1 10 170 arc 1 exch scale 0 0 1 170 10 arcn
} bind def /tietext {
    gsave currentpoint 3 -1 roll add exch 3 -1 roll add exch newpath gsave translate scale 0 0 1 5 175 arc 1 exch scale 0 0 1 175 5 arcn fill grestore grestore 0 rmoveto
} bind def
%%EndSetup
gsave
[0.575788 0 0 -0.575788 0 842] concat
48.628971 64.259712 932.634216 361.243774 rectclip
970.292664 88.247963 62.522964 88.247963 LI
970.292664 96.247963 62.522964 96.247963 LI
970.292664 104.247963 62.522964 104.247963 LI
970.292664 112.247963 62.522964 112.247963 LI
970.292664 120.247963 62.522964 120.247963 LI
0 0.55 ST
/Sonata findfont 32 scalefont [1 0 0 -1 0 0] makefont
46
exch
defineuserobject
46 execuserobject setfont
0 66.522964 120.522964 MG
(&) show
0 95.226959 144.686966 MG
/Times-Roman findfont 18 scalefont [1 0 0 -1 0 0] makefont
47
exch
defineuserobject
47 execuserobject setfont
(Tem) show
47 execuserobject setfont
0 145.002274 144.686966 MG
(-) show
46 execuserobject setfont
0 106.426956 112.522964 MG
(h) show
46 execuserobject setfont
0 119.034958 108.522964 MG
(.) show
0 167.61557 144.686966 MG
47 execuserobject setfont
(pro) show
46 execuserobject setfont
0 173.815567 112.522964 MG
(e) show
46 execuserobject setfont
0 193.591568 108.522964 MG
(.) show
0 212.567596 144.686966 MG
47 execuserobject setfont
(la) show
46 execuserobject setfont
0 213.767593 116.522964 MG
(x) show
46 execuserobject setfont
0 204.599594 116.522964 MG
(#) show
240.493851 120.522964 240.493851 88.247963 LI
0 0.6 ST
0 248.811264 144.686966 MG
47 execuserobject setfont
(ce) show
47 execuserobject setfont
0 282.913727 144.686966 MG
(-) show
46 execuserobject setfont
0 251.011261 112.522964 MG
(h) show
0 306.864166 144.686966 MG
47 execuserobject setfont
(tra) show
46 execuserobject setfont
0 311.064178 112.522964 MG
(h) show
352.447205 120.522964 352.447205 88.247963 LI
0 0.6 ST
46 execuserobject setfont
0 363.886963 100.522964 MG
<e4> show
0 388.952087 144.686966 MG
47 execuserobject setfont
(e) show
46 execuserobject setfont
0 387.1521 112.522964 MG
(e) show
0 406.799072 144.686966 MG
47 execuserobject setfont
(per) show
46 execuserobject setfont
0 412.999084 112.522964 MG
(e) show
0 438.605072 144.686966 MG
47 execuserobject setfont
(can) show
47 execuserobject setfont
0 467.662079 144.686966 MG
(-) show
46 execuserobject setfont
0 445.805084 112.522964 MG
(e) show
0 477.567078 144.686966 MG
47 execuserobject setfont
(tar) show
46 execuserobject setfont
0 481.76709 112.522964 MG
(e) show
46 execuserobject setfont
0 501.543091 108.522964 MG
(.) show
0 517.519165 144.686966 MG
47 execuserobject setfont
(gli) show
5.994 1.5 5.4 2.7 2.997 1.8 tietext
(ho) show
47 execuserobject setfont
0 563.585144 144.686966 MG
(-) show
46 execuserobject setfont
0 521.719177 116.522964 MG
(x) show
46 execuserobject setfont
0 512.551147 116.522964 MG
(#) show
0 572.48114 144.686966 MG
47 execuserobject setfont
(no) show
47 execuserobject setfont
0 619.145081 144.686966 MG
(-) show
47 execuserobject setfont
0 650.725098 144.686966 MG
(-) show
46 execuserobject setfont
0 576.681152 108.522964 MG
(q) show
607.208862 120.522964 607.208862 88.247963 LI
0 0.6 ST
46 execuserobject setfont
0 624.941345 108.522964 MG
(h) show
0 685.221069 144.686966 MG
47 execuserobject setfont
(ri) show
46 execuserobject setfont
0 685.421082 116.522964 MG
(q) show
46 execuserobject setfont
0 676.253052 116.522964 MG
(#) show
46 execuserobject setfont
0 698.029053 116.522964 MG
(.) show
0 744.515503 144.686966 MG
47 execuserobject setfont
(di) show
46 execuserobject setfont
0 746.715515 120.522964 MG
(e) show
778.129761 120.522964 778.129761 88.247963 LI
0 0.6 ST
0 780.081543 144.686966 MG
47 execuserobject setfont
(Mar) show
47 execuserobject setfont
0 843.315857 144.686966 MG
(-) show
47 execuserobject setfont
0 879.478271 144.686966 MG
(-) show
46 execuserobject setfont
0 787.489563 120.522964 MG
(w) show
900.997925 120.522964 900.997925 88.247963 LI
0 0.6 ST
0 918.556641 144.686966 MG
47 execuserobject setfont
(te,) show
46 execuserobject setfont
0 919.964661 124.522964 MG
(w) show
969.904663 120.522964 969.904663 88.247963 LI
0 0.6 ST
970.292664 172.335968 62.522964 172.335968 LI
970.292664 180.335968 62.522964 180.335968 LI
970.292664 188.335968 62.522964 188.335968 LI
970.292664 196.335968 62.522964 196.335968 LI
970.292664 204.335968 62.522964 204.335968 LI
0 0.55 ST
46 execuserobject setfont
0 66.522964 204.610962 MG
(?) show
46 execuserobject setfont
0 104.634956 176.610962 MG
(w) show
240.493851 204.610962 240.493851 172.335968 LI
0 0.6 ST
46 execuserobject setfont
0 249.219269 176.610962 MG
(w) show
352.447205 204.610962 352.447205 172.335968 LI
0 0.6 ST
46 execuserobject setfont
0 361.486938 176.610962 MG
(w) show
607.208862 204.610962 607.208862 172.335968 LI
0 0.6 ST
46 execuserobject setfont
0 624.941345 180.610962 MG
(H) show
46 execuserobject setfont
0 615.773315 180.610962 MG
(#) show
46 execuserobject setfont
0 685.421082 180.610962 MG
(H) show
778.129761 204.610962 778.129761 172.335968 LI
0 0.6 ST
46 execuserobject setfont
0 787.489563 184.610962 MG
(w) show
900.997925 204.610962 900.997925 172.335968 LI
0 0.6 ST
46 execuserobject setfont
0 919.964661 188.610962 MG
(w) show
969.904663 204.610962 969.904663 172.335968 LI
0 0.6 ST
62.522964 204.610962 62.522964 88.522964 LI
0 1 ST
970.292664 284.499969 62.522964 284.499969 LI
970.292664 292.499969 62.522964 292.499969 LI
970.292664 300.499969 62.522964 300.499969 LI
970.292664 308.499969 62.522964 308.499969 LI
970.292664 316.499969 62.522964 316.499969 LI
0 0.55 ST
46 execuserobject setfont
0 66.522964 316.774963 MG
(&) show
0 102.226959 340.938965 MG
47 execuserobject setfont
(Al) show
47 execuserobject setfont
0 134.540695 340.938965 MG
(-) show
46 execuserobject setfont
0 106.426956 320.774963 MG
(q) show
0 154.686447 340.938965 MG
47 execuserobject setfont
(zo) show
46 execuserobject setfont
0 157.886444 312.774963 MG
(q) show
46 execuserobject setfont
0 148.718445 312.774963 MG
(#) show
0 205.708481 340.938965 MG
47 execuserobject setfont
(tal) show
46 execuserobject setfont
0 209.908478 304.774963 MG
(q) show
0 255.730499 340.938965 MG
47 execuserobject setfont
(hor) show
316.124573 340.938965 281.724487 340.938965 LI
0 0.77 ST
46 execuserobject setfont
0 261.930511 292.774963 MG
(Q) show
299.861938 316.774963 299.861938 284.499969 LI
0 0.6 ST
46 execuserobject setfont
0 308.524567 292.774963 MG
(Q) show
0 356.859558 340.938965 MG
47 execuserobject setfont
(lo) show
46 execuserobject setfont
0 359.05957 304.774963 MG
(q) show
0 404.881592 340.938965 MG
47 execuserobject setfont
(stil) show
645 340.938965 428.895599 340.938965 LI
0 0.77 ST
46 execuserobject setfont
0 411.081604 296.774963 MG
(Q) show
46 execuserobject setfont
0 423.689606 296.774963 MG
(.) show
46 execuserobject setfont
0 484.265106 292.774963 MG
(E) show
511.329193 316.774963 511.329193 284.499969 LI
0 0.6 ST
46 execuserobject setfont
0 522.006653 288.774963 MG
(Q) show
46 execuserobject setfont
0 572.713806 288.774963 MG
<cf> show
46 execuserobject setfont
0 592.993591 284.774963 MG
<cf> show
46 execuserobject setfont
0 613.273376 280.774963 MG
<cf> show
46 execuserobject setfont
0 634.135559 276.774963 MG
<cf> show
646.735535 276.774963 631.135559 276.774963 LI
0 0.8 ST
46 execuserobject setfont
0 654.873352 300.774963 MG
<ce> show
0 707.654907 340.938965 MG
47 execuserobject setfont
(e) show
5.994 1.5 5.4 2.7 2.997 1.8 tietext
(i) show
46 execuserobject setfont
0 705.854919 304.774963 MG
(q) show
742.934448 316.774963 742.934448 284.499969 LI
0 0.6 ST
0 748.851685 340.938965 MG
47 execuserobject setfont
(car) show
47 execuserobject setfont
0 801.996399 340.938965 MG
(-) show
47 execuserobject setfont
0 836.079102 340.938965 MG
(-) show
47 execuserobject setfont
0 870.161804 340.938965 MG
(-) show
46 execuserobject setfont
0 752.259705 300.774963 MG
(w) show
888.352539 316.774963 888.352539 284.499969 LI
0 0.6 ST
0 907.160522 340.938965 MG
47 execuserobject setfont
(mi,) show
46 execuserobject setfont
0 911.568542 304.774963 MG
(w) show
969.904663 316.774963 969.904663 284.499969 LI
0 0.6 ST
970.292664 368.587982 62.522964 368.587982 LI
970.292664 376.587982 62.522964 376.587982 LI
970.292664 384.587982 62.522964 384.587982 LI
970.292664 392.587982 62.522964 392.587982 LI
970.292664 400.587982 62.522964 400.587982 LI
0 0.55 ST
46 execuserobject setfont
0 66.522964 400.862976 MG
(?) show
46 execuserobject setfont
0 104.634956 384.862976 MG
(w) show
299.861938 400.862976 299.861938 368.587982 LI
0 0.6 ST
46 execuserobject setfont
0 308.524567 384.862976 MG
(H) show
46 execuserobject setfont
0 411.081604 396.862976 MG
(h) show
511.329193 400.862976 511.329193 368.587982 LI
0 0.6 ST
46 execuserobject setfont
0 520.214661 396.862976 MG
(w) show
742.934448 400.862976 742.934448 368.587982 LI
0 0.6 ST
46 execuserobject setfont
0 752.259705 380.862976 MG
(w) show
888.352539 400.862976 888.352539 368.587982 LI
0 0.6 ST
46 execuserobject setfont
0 911.568542 396.862976 MG
(w) show
969.904663 400.862976 969.904663 368.587982 LI
0 0.6 ST
62.522964 400.862976 62.522964 284.774963 LI
0 1 ST
581.48114 114.522964 moveto
586.307129 126.522964 624.915283 126.522964 629.741333 114.522964 curveto
624.915283 124.522964 586.307129 124.522964 581.48114 114.522964 curveto
closepath
0 setgray
fill
0 setgray
62.221741 -4 -6.00528 572.713806 315.73584 slant
fill
0 setgray
62.221741 -4 -6.00528 572.713806 309.73584 slant
fill
573.11377 315.697235 573.11377 290.774963 LI
0 0.8 ST
593.393555 313.73996 593.393555 286.774963 LI
0 0.8 ST
613.67334 311.782654 613.67334 282.774963 LI
0 0.8 ST
634.535522 309.769165 634.535522 278.774963 LI
0 0.8 ST
526.806641 282.774963 moveto
531.87738 270.774963 572.443054 270.774963 577.513794 282.774963 curveto
572.443054 268.774963 531.87738 268.774963 526.806641 282.774963 curveto
closepath
0 setgray
fill
266.730499 286.774963 moveto
271.389893 275.126465 308.665161 275.126465 313.324554 286.774963 curveto
308.665161 273.126465 271.389893 273.126465 266.730499 286.774963 curveto
closepath
0 setgray
fill
111.226959 378.862976 moveto
131.436722 366.862976 293.114807 366.862976 313.324554 378.862976 curveto
293.114807 364.862976 131.436722 364.862976 111.226959 378.862976 curveto
closepath
0 setgray
fill
grestore
%%Trailer
%%DocumentFonts: Times-Roman
%%+ Sonata

%%EndDocument
count __NXEPSOpCount sub {pop} repeat countdictstack __NXEPSDictCount sub {end} repeat __NXEPSSave restore
grestore
grestore
grestore
%%Trailer
%%DocumentFonts: Sonata
