%!PS-Adobe-2.0 EPSF-2.0
%%Title: 
%%Creator: OpenWrite
%%CreationDate: Tue Jul 30 10:26:18 1996
%%For: wfc
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 0 0 451 103
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.1
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{2 copy 3 ne or{_NXDoImageOp}{4 index dup 8 ne exch 4 ne and{_NXDoImageOp}{
		pop pop save 6 1 roll 12 dict begin/Proc exch def/Res 0 string def
		/Alloc{2 index length mul 2 add dup 2 index load length gt{1.2 mul round cvi string def}{pop pop}ifelse}def
		1 index 8 eq{/Unpack{.34 Alloc}def}{
			/Wid 4 index 3 mul def exch pop 8 exch/Str1 0 string def/Lim Wid def
			/Unpack{.67 Alloc/Str1 2 Alloc 0 exch Lim exch
				{dup -4 bitshift 17 mul Str1 exch 4 index exch put 15 and 17 mul Str1 exch 3 index 1 add exch put
				2 sub dup 0 le{0 lt Wid exch{exch 1 sub exch}if}if exch 2 add exch
				}forall/Lim exch def Str1 exch 0 exch getinterval
			}def
		}ifelse
		/Ops[{.3 mul add 1}{.59 mul add 2}{.11 mul add round cvi Res exch 2 index exch put 1 add 0.0 0}]def/Val 0.0 def/Phase 0 def
		{0 Val Phase Proc/Res Unpack{exch Ops exch get exec}forall/Phase exch def/Val exch def Res exch 0 exch getinterval}
		image end restore}ifelse}ifelse
	}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

gsave
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
%%EndSetup
gsave
0 0 1000 1000 rectclip
0 0 451 103 rectclip
0.000000 0.000000 transform
gsave __NXbasematrix setmatrix itransform translate
0 0 451 103 rectclip
0 0 translate
0 rotate
0.935685 0.935685 scale
gsave
-25 -469 translate

/__NXEPSSave save def /showpage {} def
_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
/_NXcimage where{pop}{/_NXcimage /colorimage load def}ifelse /colorimage{dup 3 eq{true 2 index{1 index}{1}ifelse 7 add 1 roll _NXCalibratedImage}{_NXcimage}ifelse}def}if
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath count /__NXEPSOpCount exch def /__NXEPSDictCount countdictstack def
%%BeginDocument: /Users/wfc/CalliopeDocs/Tutorial/Lessons/tutorial.openbook/Parts.open/graphic_4.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: cima-sonata.opus
%%Creator: Calliope
%%CreationDate: Mon Jan 29 14:15:38 1996
%%For: wfc
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 25 469 507 579
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.1
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{2 copy 3 ne or{_NXDoImageOp}{4 index dup 8 ne exch 4 ne and{_NXDoImageOp}{
		pop pop save 6 1 roll 12 dict begin/Proc exch def/Res 0 string def
		/Alloc{2 index length mul 2 add dup 2 index load length gt{1.2 mul round cvi string def}{pop pop}ifelse}def
		1 index 8 eq{/Unpack{.34 Alloc}def}{
			/Wid 4 index 3 mul def exch pop 8 exch/Str1 0 string def/Lim Wid def
			/Unpack{.67 Alloc/Str1 2 Alloc 0 exch Lim exch
				{dup -4 bitshift 17 mul Str1 exch 4 index exch put 15 and 17 mul Str1 exch 3 index 1 add exch put
				2 sub dup 0 le{0 lt Wid exch{exch 1 sub exch}if}if exch 2 add exch
				}forall/Lim exch def Str1 exch 0 exch getinterval
			}def
		}ifelse
		/Ops[{.3 mul add 1}{.59 mul add 2}{.11 mul add round cvi Res exch 2 index exch put 1 add 0.0 0}]def/Val 0.0 def/Phase 0 def
		{0 Val Phase Proc/Res Unpack{exch Ops exch get exec}forall/Phase exch def/Val exch def Res exch 0 exch getinterval}
		image end restore}ifelse}ifelse
	}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

gsave
-20 -28.960022 translate
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/TP {
    transform round exch round exch itransform
} bind def /LI {
    moveto lineto
} bind def /ST {
    setlinewidth setgray stroke
} bind def /MG {
    moveto setgray
} bind def /slant {
    moveto 2 index 1 index rlineto 0 2 index rlineto 2 index neg 1 index neg rlineto closepath pop pop pop
} bind def /tie {
    scale newpath 0 0 1 10 170 arc 1 exch scale 0 0 1 170 10 arcn
} bind def /tietext {
    gsave currentpoint 3 -1 roll add exch 3 -1 roll add exch newpath gsave translate scale 0 0 1 5 175 arc 1 exch scale 0 0 1 175 5 arcn fill grestore grestore 0 rmoveto
} bind def
%%EndSetup
gsave
[0.500936 0 0 -0.500936 0 689.039978] concat
49.906578 221.585251 962.198853 217.592728 rectclip
999.817383 240.715195 170.522781 240.715195 LI
265.097412 240.715195 62.522964 240.715195 LI
999.817383 248.715195 170.522781 248.715195 LI
265.097412 248.715195 62.522964 248.715195 LI
999.817383 256.71521 170.522781 256.71521 LI
265.097412 256.71521 62.522964 256.71521 LI
999.817383 264.71521 170.522781 264.71521 LI
265.097412 264.71521 62.522964 264.71521 LI
999.817383 272.71521 170.522781 272.71521 LI
265.097412 272.71521 62.522964 272.71521 LI
0 0.55 ST
/Calliope findfont 32 scalefont [1 0 0 -1 0 0] makefont
48
exch
defineuserobject
48 execuserobject setfont
0 62.445892 272.990173 MG
(Q) show
/Sonata findfont 32 scalefont [1 0 0 -1 0 0] makefont
49
exch
defineuserobject
49 execuserobject setfont
0 87.709892 257.006165 MG
(c) show
49 execuserobject setfont
0 118.062546 260.990173 MG
(q) show
49 execuserobject setfont
0 174.522781 272.990173 MG
(&) show
49 execuserobject setfont
0 214.426773 260.990173 MG
(q) show
49 execuserobject setfont
0 258.353821 244.990189 MG
(Q) show
49 execuserobject setfont
0 302.854462 252.990189 MG
(Q) show
49 execuserobject setfont
0 347.355103 260.990173 MG
(q) show
49 execuserobject setfont
0 359.963104 260.990173 MG
(.) show
49 execuserobject setfont
0 414.106049 256.990173 MG
<cf> show
49 execuserobject setfont
0 440.504761 252.990189 MG
<cf> show
49 execuserobject setfont
0 466.903442 248.990189 MG
<cf> show
49 execuserobject setfont
0 493.302094 244.990189 MG
(Q) show
49 execuserobject setfont
0 505.910095 244.990189 MG
(.) show
49 execuserobject setfont
0 572.498108 240.990189 MG
(E) show
599.231445 315.9599 599.231445 240.715195 LI
0 0.6 ST
49 execuserobject setfont
0 612.082886 236.990189 MG
(Q) show
49 execuserobject setfont
0 655.155823 232.990189 MG
(H) show
667.755798 232.990189 652.155823 232.990189 LI
0 0.8 ST
49 execuserobject setfont
0 744.157043 236.990189 MG
(Q) show
49 execuserobject setfont
0 788.657654 232.990189 MG
(Q) show
49 execuserobject setfont
0 801.265625 228.990189 MG
(.) show
801.257629 232.990189 785.657654 232.990189 LI
0 0.8 ST
49 execuserobject setfont
0 867.853699 236.990189 MG
(E) show
49 execuserobject setfont
0 894.25238 240.990189 MG
(H) show
999.582214 315.9599 999.582214 240.715195 LI
0 0.6 ST
999.817383 315.684906 170.522781 315.684906 LI
265.097382 315.684906 62.522964 315.684906 LI
999.817383 323.684906 170.522781 323.684906 LI
265.097382 323.684906 62.522964 323.684906 LI
999.817383 331.684906 170.522781 331.684906 LI
265.097382 331.684906 62.522964 331.684906 LI
999.817383 339.684906 170.522781 339.684906 LI
265.097382 339.684906 62.522964 339.684906 LI
999.817383 347.684906 170.522781 347.684906 LI
265.097382 347.684906 62.522964 347.684906 LI
0 0.55 ST
48 execuserobject setfont
0 63.445892 347.9599 MG
(Q) show
49 execuserobject setfont
0 87.709892 331.975891 MG
(c) show
49 execuserobject setfont
0 110.432213 331.9599 MG
<ee> show
48 execuserobject setfont
0 139.112518 335.9599 MG
(>) show
139.112518 307.9599 139.112518 330.295898 LI
0 1 ST
49 execuserobject setfont
0 174.522781 347.9599 MG
(&) show
49 execuserobject setfont
0 214.218781 331.9599 MG
<ee> show
49 execuserobject setfont
0 302.854462 335.9599 MG
(q) show
49 execuserobject setfont
0 347.355103 319.9599 MG
(Q) show
49 execuserobject setfont
0 391.855743 327.9599 MG
(Q) show
49 execuserobject setfont
0 440.504761 335.9599 MG
(q) show
49 execuserobject setfont
0 453.112762 335.9599 MG
(.) show
49 execuserobject setfont
0 519.700745 331.9599 MG
<cf> show
49 execuserobject setfont
0 546.099426 327.9599 MG
<cf> show
49 execuserobject setfont
0 572.498108 323.9599 MG
<cf> show
599.231445 390.929565 599.231445 315.684906 LI
0 0.6 ST
49 execuserobject setfont
0 612.082886 319.9599 MG
(Q) show
49 execuserobject setfont
0 655.155823 327.9599 MG
(Q) show
49 execuserobject setfont
0 699.656433 331.9599 MG
(h) show
49 execuserobject setfont
0 788.657654 335.9599 MG
<cf> show
49 execuserobject setfont
0 815.056213 339.9599 MG
<cf> show
49 execuserobject setfont
0 841.454895 343.9599 MG
<cf> show
49 execuserobject setfont
0 867.853699 339.9599 MG
<cf> show
49 execuserobject setfont
0 894.25238 335.9599 MG
<cf> show
49 execuserobject setfont
0 920.651062 339.9599 MG
<cf> show
49 execuserobject setfont
0 947.049622 335.9599 MG
<cf> show
49 execuserobject setfont
0 973.448425 331.9599 MG
<cf> show
999.582214 390.929565 999.582214 315.684906 LI
0 0.6 ST
999.817383 390.654572 170.522781 390.654572 LI
265.097382 390.654572 62.522964 390.654572 LI
999.817383 398.654572 170.522781 398.654572 LI
265.097382 398.654572 62.522964 398.654572 LI
999.817383 406.654572 170.522781 406.654572 LI
265.097382 406.654572 62.522964 406.654572 LI
999.817383 414.654572 170.522781 414.654572 LI
265.097382 414.654572 62.522964 414.654572 LI
999.817383 422.654572 170.522781 422.654572 LI
265.097382 422.654572 62.522964 422.654572 LI
0 0.55 ST
48 execuserobject setfont
0 64.445892 422.929565 MG
($) show
49 execuserobject setfont
0 89.709892 406.945557 MG
(c) show
48 execuserobject setfont
0 117.612518 390.929565 MG
([) show
48 execuserobject setfont
0 146.612549 390.929565 MG
([) show
49 execuserobject setfont
0 174.522781 422.929565 MG
(?) show
49 execuserobject setfont
0 212.634781 390.929565 MG
(w) show
49 execuserobject setfont
0 390.063721 390.929565 MG
(w) show
599.231445 422.929565 599.231445 390.654572 LI
0 0.6 ST
49 execuserobject setfont
0 610.290894 402.929565 MG
(w) show
49 execuserobject setfont
0 786.865662 398.929565 MG
(w) show
999.582214 422.929565 999.582214 390.654572 LI
0 0.6 ST
0 setgray
161.722778 240.990189 4.8 181.939377 rectfill
49 execuserobject setfont
0 161.722778 240.990189 MG
<c2> show
49 execuserobject setfont
0 161.722778 422.929565 MG
(L) show
170.522781 422.929565 170.522781 240.990189 LI
0 1 ST
0 34.522964 526.323547 MG
/Times-Italic findfont 16 scalefont [1 0 0 -1 0 0] makefont
53
exch
defineuserobject
53 execuserobject setfont
(3) show
0 34.522964 802.57843 MG
53 execuserobject setfont
(5) show
0 34.522964 1073.844482 MG
53 execuserobject setfont
(7) show
0 setgray
53.597382 -4 -4.000427 414.106049 283.959869 slant
fill
414.506042 283.930023 414.506042 258.990173 LI
0 0.8 ST
440.904755 281.959656 440.904755 254.990189 LI
0 0.8 ST
467.303436 279.989288 467.303436 250.990189 LI
0 0.8 ST
0 setgray
79.996033 4 -2.403839 903.052368 307.375854 slant
fill
903.452393 307.363831 903.452393 333.9599 LI
0 0.8 ST
929.851074 306.570557 929.851074 337.9599 LI
0 0.8 ST
956.249634 305.777313 956.249634 333.9599 LI
0 0.8 ST
982.648438 304.984039 982.648438 329.9599 LI
0 0.8 ST
0 setgray
79.996033 4 2.400665 797.457642 308.972015 slant
fill
797.857666 308.984009 797.857666 333.9599 LI
0 0.8 ST
824.256226 309.776245 824.256226 337.9599 LI
0 0.8 ST
850.654907 310.568451 850.654907 341.9599 LI
0 0.8 ST
877.053711 311.360687 877.053711 337.9599 LI
0 0.8 ST
0 setgray
53.597351 -4 -3.999664 519.700745 358.929596 slant
fill
520.100708 358.89975 520.100708 333.9599 LI
0 0.8 ST
546.49939 356.929779 546.49939 329.9599 LI
0 0.8 ST
572.898071 354.959778 572.898071 325.9599 LI
0 0.8 ST
219.226776 384.929565 moveto
236.969666 372.929565 378.912842 372.929565 396.655731 384.929565 curveto
378.912842 370.929565 236.969666 370.929565 219.226776 384.929565 curveto
closepath
0 setgray
fill
117.612518 384.929565 moveto
120.51252 377.679565 143.71254 377.679565 146.612549 384.929565 curveto
143.71254 375.679565 120.51252 375.679565 117.612518 384.929565 curveto
closepath
0 setgray
fill
grestore
%%Trailer
%%DocumentFonts: Times-Italic
%%+ Calliope
%%+ Sonata

%%EndDocument
count __NXEPSOpCount sub {pop} repeat countdictstack __NXEPSDictCount sub {end} repeat __NXEPSSave restore
grestore
grestore
grestore
%%Trailer
%%DocumentFonts: Calliope
%%+ Sonata
