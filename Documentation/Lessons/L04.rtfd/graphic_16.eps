%!PS-Adobe-2.0 EPSF-2.0
%%Title: 
%%Creator: OpenWrite
%%CreationDate: Mon Jul 29 16:01:57 1996
%%For: wfc
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 0 0 451 139
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.1
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{2 copy 3 ne or{_NXDoImageOp}{4 index dup 8 ne exch 4 ne and{_NXDoImageOp}{
		pop pop save 6 1 roll 12 dict begin/Proc exch def/Res 0 string def
		/Alloc{2 index length mul 2 add dup 2 index load length gt{1.2 mul round cvi string def}{pop pop}ifelse}def
		1 index 8 eq{/Unpack{.34 Alloc}def}{
			/Wid 4 index 3 mul def exch pop 8 exch/Str1 0 string def/Lim Wid def
			/Unpack{.67 Alloc/Str1 2 Alloc 0 exch Lim exch
				{dup -4 bitshift 17 mul Str1 exch 4 index exch put 15 and 17 mul Str1 exch 3 index 1 add exch put
				2 sub dup 0 le{0 lt Wid exch{exch 1 sub exch}if}if exch 2 add exch
				}forall/Lim exch def Str1 exch 0 exch getinterval
			}def
		}ifelse
		/Ops[{.3 mul add 1}{.59 mul add 2}{.11 mul add round cvi Res exch 2 index exch put 1 add 0.0 0}]def/Val 0.0 def/Phase 0 def
		{0 Val Phase Proc/Res Unpack{exch Ops exch get exec}forall/Phase exch def/Val exch def Res exch 0 exch getinterval}
		image end restore}ifelse}ifelse
	}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

gsave
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
%%EndSetup
gsave
0 0 1000 1000 rectclip
0 0 451 139 rectclip
0.000000 0.000000 transform
gsave __NXbasematrix setmatrix itransform translate
0 0 451 139 rectclip
0 0 translate
0 rotate
0.882583 0.882583 scale
gsave
-31 -494 translate

/__NXEPSSave save def /showpage {} def
_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
/_NXcimage where{pop}{/_NXcimage /colorimage load def}ifelse /colorimage{dup 3 eq{true 2 index{1 index}{1}ifelse 7 add 1 roll _NXCalibratedImage}{_NXcimage}ifelse}def}if
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath count /__NXEPSOpCount exch def /__NXEPSDictCount countdictstack def
%%BeginDocument: /Users/wfc/CalliopeDocs/Tutorial/Lessons/tutorial.openbook/Lesson 4: Page Formatting.open/graphic_16.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: 
%%Creator: SuperDraw
%%CreationDate: Fri Feb  9 10:21:41 1996
%%For: wfc
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 31 494 542 651
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.1
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{2 copy 3 ne or{_NXDoImageOp}{4 index dup 8 ne exch 4 ne and{_NXDoImageOp}{
		pop pop save 6 1 roll 12 dict begin/Proc exch def/Res 0 string def
		/Alloc{2 index length mul 2 add dup 2 index load length gt{1.2 mul round cvi string def}{pop pop}ifelse}def
		1 index 8 eq{/Unpack{.34 Alloc}def}{
			/Wid 4 index 3 mul def exch pop 8 exch/Str1 0 string def/Lim Wid def
			/Unpack{.67 Alloc/Str1 2 Alloc 0 exch Lim exch
				{dup -4 bitshift 17 mul Str1 exch 4 index exch put 15 and 17 mul Str1 exch 3 index 1 add exch put
				2 sub dup 0 le{0 lt Wid exch{exch 1 sub exch}if}if exch 2 add exch
				}forall/Lim exch def Str1 exch 0 exch getinterval
			}def
		}ifelse
		/Ops[{.3 mul add 1}{.59 mul add 2}{.11 mul add round cvi Res exch 2 index exch put 1 add 0.0 0}]def/Val 0.0 def/Phase 0 def
		{0 Val Phase Proc/Res Unpack{exch Ops exch get exec}forall/Phase exch def/Val exch def Res exch 0 exch getinterval}
		image end restore}ifelse}ifelse
	}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

gsave
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/linear {
    /te exch def /ts exch def /ns exch def /nd ns 1 sub def ns 1 le {
        /ns 1 def /nd 1 def
    } if /dy te ts sub ns div def /factor te ts sub nd div def 1 index sub factor mul exch 8 2 roll 1 index sub factor mul exch 8 2 roll 1 index sub factor mul exch 8 2 roll 1 index sub factor mul exch 8 2 roll 6 index 5 index 4 index 3 index setcmykcolor ts dy te {
        0 exch 1 dy rectfill 1 index add 8 2 roll 1 index add 8 2 roll 1 index add 8 2 roll 1 index add 8 2 roll 6 index 5 index 4 index 3 index setcmykcolor
    } for pop pop pop pop pop pop pop pop
} bind def /alinear {
    /te exch def /ts exch def /ns exch def /nd ns 1 sub def ns 1 le {
        /ns 1 def /nd 1 def
    } if /dy te ts sub ns div def /factor te ts sub nd div def 1 index sub factor mul exch 8 2 roll 1 index sub factor mul exch 8 2 roll 1 index sub factor mul exch 8 2 roll 1 index sub factor mul exch 8 2 roll 6 index setalpha 4 index 3 index 2 index setrgbcolor ts dy te {
        0 exch 1 dy rectfill 1 index add 8 2 roll 1 index add 8 2 roll 1 index add 8 2 roll 1 index add 8 2 roll 6 index setalpha 4 index 3 index 2 index setrgbcolor
    } for pop pop pop pop pop pop pop pop
} def /radial {
    /te exch def /ts exch def /fy exch def /fx exch def /ns exch def /nd ns 1 sub def ns 1 le {
        /ns 1 def /nd 1 def
    } if /dy te ts sub ns div def /factor te ts sub nd div def 1 index sub factor mul exch 8 2 roll 1 index sub factor mul exch 8 2 roll 1 index sub factor mul exch 8 2 roll 1 index sub factor mul exch 8 2 roll 6 index 5 index 4 index 3 index setcmykcolor fx dy mul 0.5 1 te sub fx mul add fy dy mul 0.5 1 te sub fy mul add /total 2 sqrt 0.5 mul def te total mul dy total mul neg ts total mul {
        newpath 3 index 2 index 2 index 0 360 arc fill pop 1 index add 12 2 roll 1 index add 12 2 roll 1 index add 12 2 roll 1 index add 12 2 roll 1 index add 12 2 roll 1 index add 12 2 roll 10 index 9 index 8 index 7 index setcmykcolor
    } for pop pop pop pop pop pop pop pop pop pop pop pop
} bind def /aradial {
    /te exch def /ts exch def /fy exch def /fx exch def /ns exch def /nd ns 1 sub def ns 1 le {
        /ns 1 def /nd 1 def
    } if /dy te ts sub ns div def /factor te ts sub nd div def 1 index sub factor mul exch 8 2 roll 1 index sub factor mul exch 8 2 roll 1 index sub factor mul exch 8 2 roll 1 index sub factor mul exch 8 2 roll 6 index setalpha 4 index 3 index 2 index setrgbcolor fx dy mul 0.5 1 te sub fx mul add fy dy mul 0.5 1 te sub fy mul add /total 2 sqrt 0.5 mul def te total mul dy total mul neg ts total mul {
        newpath 3 index 2 index 2 index 0 360 arc fill pop 1 index add 12 2 roll 1 index add 12 2 roll 1 index add 12 2 roll 1 index add 12 2 roll 1 index add 12 2 roll 1 index add 12 2 roll 10 index setalpha 8 index 7 index 6 index setrgbcolor
    } for pop pop pop pop pop pop pop pop pop pop pop pop
} def /getnumpaths {
    /nPaths 0 def {
        /y exch def /x exch def /nPaths nPaths 1 add def
    } {
        /y exch def /x exch def
    } {
        /y3 exch def /x3 exch def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
    } {
        
    } pathforall nPaths
} def /getpathinfo {
    /pathNum exch def /numMoveto 0 def /numLineto 0 def /numCurveto 0 def /numClosepath 0 def {
        /y exch def /x exch def /numMoveto numMoveto 1 add def
    } {
        /y exch def /x exch def numMoveto pathNum eq {
            /numLineto numLineto 1 add def
        } if
    } {
        /y3 exch def /x3 exch def /y2 exch def /x2 exch def /y1 exch def /x1 exch def numMoveto pathNum eq {
            /numCurveto numCurveto 1 add def
        } if
    } {
        numMoveto pathNum eq {
            /numClosepath numClosepath 1 add def
        } if
    } pathforall numClosepath numCurveto numLineto
} def /getpathcoords {
    /pathNum exch def /numMoveto 0 def /numLineto 0 def /numCurveto 0 def /numClosepath 0 def {
        /y exch def /x exch def /numMoveto numMoveto 1 add def numMoveto pathNum eq {
            y x
        } if
    } {
        /y exch def /x exch def numMoveto pathNum eq {
            /numLineto numLineto 1 add def 1 index 1 index y x y x
        } if
    } {
        /y3 exch def /x3 exch def /y2 exch def /x2 exch def /y1 exch def /x1 exch def numMoveto pathNum eq {
            /numCurveto numCurveto 1 add def y1 x1 y2 x2 y3 x3
        } if
    } {
        numMoveto pathNum eq {
            /numClosepath numClosepath 1 add def
        } if
    } pathforall
} def
%%EndSetup
0 0 541.5 651 rectclip
31.5 494 510 157 rectclip
gsave
33.5 496 translate
[1 0 0 1 0 0] concat
gsave
gsave
gsave
253 76.5 translate
0 rotate
-253 -76.5 translate
1 1 scale
gsave
-37 -655 translate

/__NXEPSSave save def /showpage {} def
_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
/_NXcimage where{pop}{/_NXcimage /colorimage load def}ifelse /colorimage{dup 3 eq{true 2 index{1 index}{1}ifelse 7 add 1 roll _NXCalibratedImage}{_NXcimage}ifelse}def}if
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath count /__NXEPSOpCount exch def /__NXEPSDictCount countdictstack def
%%BeginDocument: 
%!PS-Adobe-2.0 EPSF-2.0
%%Title: schutz-paratum.opus
%%Creator: Calliope
%%CreationDate: Fri Feb  9 10:19:16 1996
%%For: wfc
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 37 655 543 808
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.1
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{2 copy 3 ne or{_NXDoImageOp}{4 index dup 8 ne exch 4 ne and{_NXDoImageOp}{
		pop pop save 6 1 roll 12 dict begin/Proc exch def/Res 0 string def
		/Alloc{2 index length mul 2 add dup 2 index load length gt{1.2 mul round cvi string def}{pop pop}ifelse}def
		1 index 8 eq{/Unpack{.34 Alloc}def}{
			/Wid 4 index 3 mul def exch pop 8 exch/Str1 0 string def/Lim Wid def
			/Unpack{.67 Alloc/Str1 2 Alloc 0 exch Lim exch
				{dup -4 bitshift 17 mul Str1 exch 4 index exch put 15 and 17 mul Str1 exch 3 index 1 add exch put
				2 sub dup 0 le{0 lt Wid exch{exch 1 sub exch}if}if exch 2 add exch
				}forall/Lim exch def Str1 exch 0 exch getinterval
			}def
		}ifelse
		/Ops[{.3 mul add 1}{.59 mul add 2}{.11 mul add round cvi Res exch 2 index exch put 1 add 0.0 0}]def/Val 0.0 def/Phase 0 def
		{0 Val Phase Proc/Res Unpack{exch Ops exch get exec}forall/Phase exch def/Val exch def Res exch 0 exch getinterval}
		image end restore}ifelse}ifelse
	}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

gsave
-20 24.000061 translate
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/TP {
    transform round exch round exch itransform
} bind def /LI {
    moveto lineto
} bind def /ST {
    setlinewidth setgray stroke
} bind def /MG {
    moveto setgray
} bind def /slant {
    moveto 2 index 1 index rlineto 0 2 index rlineto 2 index neg 1 index neg rlineto closepath pop pop pop
} bind def /tie {
    scale newpath 0 0 1 10 170 arc 1 exch scale 0 0 1 170 10 arcn
} bind def /tietext {
    gsave currentpoint 3 -1 roll add exch 3 -1 roll add exch newpath gsave translate scale 0 0 1 5 175 arc 1 exch scale 0 0 1 175 5 arcn fill grestore grestore 0 rmoveto
} bind def
%%EndSetup
gsave
[0.487204 0 0 -0.487204 0 842.000061] concat
75.943588 71.838531 1038.579834 311.984467 rectclip
1102.616821 97.684807 118.225693 97.684807 LI
1102.616821 103.684807 118.225693 103.684807 LI
1102.616821 109.684807 118.225693 109.684807 LI
1102.616821 115.684807 118.225693 115.684807 LI
1102.616821 121.684807 118.225693 121.684807 LI
0 0.4125 ST
/Sonata findfont 24 scalefont [1 0 0 -1 0 0] makefont
49
exch
defineuserobject
49 execuserobject setfont
0 122.225693 121.89106 MG
(&) show
49 execuserobject setfont
0 161.537689 106.891052 MG
(H) show
49 execuserobject setfont
0 237.983688 103.89106 MG
(Q) show
267.484314 159.024933 267.484314 97.684807 LI
0 0.45 ST
49 execuserobject setfont
0 279.783691 100.89106 MG
(Q) show
49 execuserobject setfont
0 313.960114 100.89106 MG
(Q) show
49 execuserobject setfont
0 363.692291 103.89106 MG
(Q) show
408.052307 159.024933 408.052307 97.684807 LI
0 0.45 ST
49 execuserobject setfont
0 418.360718 100.89106 MG
(Q) show
49 execuserobject setfont
0 427.816711 100.89106 MG
(.) show
49 execuserobject setfont
0 474.986725 100.89106 MG
(E) show
49 execuserobject setfont
0 500.45871 103.89106 MG
(Q) show
529.239746 159.024933 529.239746 97.684807 LI
0 0.45 ST
49 execuserobject setfont
0 539.680908 100.89106 MG
(Q) show
49 execuserobject setfont
0 585.744263 91.89106 MG
(Q) show
594.944214 91.89106 583.744263 91.89106 LI
0 0.6 ST
49 execuserobject setfont
0 633.611084 88.89106 MG
<cf> show
633.911072 109.89106 633.911072 90.39106 LI
0 0.6 ST
642.811035 91.89106 631.611084 91.89106 LI
0 0.6 ST
680.898926 159.024933 680.898926 97.684807 LI
0 0.45 ST
49 execuserobject setfont
0 692.659973 91.89106 MG
(Q) show
49 execuserobject setfont
0 702.115967 88.89106 MG
(.) show
701.859924 91.89106 690.659973 91.89106 LI
0 0.6 ST
49 execuserobject setfont
0 763.888306 94.89106 MG
<cf> show
49 execuserobject setfont
0 787.821777 97.89106 MG
<cf> show
49 execuserobject setfont
0 780.445801 97.89106 MG
(#) show
49 execuserobject setfont
0 811.755127 94.89106 MG
<cf> show
834.764404 159.024933 834.764404 97.684807 LI
0 0.45 ST
49 execuserobject setfont
0 846.525574 91.89106 MG
(H) show
855.725525 91.89106 844.525574 91.89106 LI
0 0.6 ST
49 execuserobject setfont
0 941.117554 94.89106 MG
(Q) show
49 execuserobject setfont
0 933.741577 94.89106 MG
(#) show
1000.342651 159.024933 1000.342651 97.684807 LI
0 0.45 ST
49 execuserobject setfont
0 1012.197144 91.89106 MG
(H) show
1021.397095 91.89106 1010.197144 91.89106 LI
0 0.6 ST
49 execuserobject setfont
0 1072.935059 100.89106 MG
(Q) show
1102.77478 159.024933 1102.77478 97.684807 LI
0 0.45 ST
1102.616821 158.81868 118.225693 158.81868 LI
1102.616821 164.81868 118.225693 164.81868 LI
1102.616821 170.81868 118.225693 170.81868 LI
1102.616821 176.81868 118.225693 176.81868 LI
1102.616821 182.81868 118.225693 182.81868 LI
0 0.4125 ST
49 execuserobject setfont
0 122.225693 183.024933 MG
(&) show
49 execuserobject setfont
0 161.537689 168.024933 MG
(H) show
49 execuserobject setfont
0 238.499695 171.024933 MG
<ce> show
267.484314 183.024933 267.484314 158.81868 LI
0 0.45 ST
49 execuserobject setfont
0 279.783691 177.024933 MG
(q) show
49 execuserobject setfont
0 313.960114 168.024933 MG
(Q) show
49 execuserobject setfont
0 363.692291 171.024933 MG
<cf> show
49 execuserobject setfont
0 386.579956 171.024933 MG
<cf> show
408.052307 183.024933 408.052307 158.81868 LI
0 0.45 ST
49 execuserobject setfont
0 418.360718 168.024933 MG
(Q) show
49 execuserobject setfont
0 427.816711 168.024933 MG
(.) show
49 execuserobject setfont
0 474.986725 168.024933 MG
(E) show
49 execuserobject setfont
0 500.45871 171.024933 MG
(Q) show
529.239746 183.024933 529.239746 158.81868 LI
0 0.45 ST
49 execuserobject setfont
0 601.568054 171.024933 MG
<b7> show
680.898926 183.024933 680.898926 158.81868 LI
0 0.45 ST
49 execuserobject setfont
0 692.659973 174.024933 MG
(q) show
49 execuserobject setfont
0 739.955017 162.024933 MG
(Q) show
49 execuserobject setfont
0 787.821777 165.024933 MG
(Q) show
834.764404 183.024933 834.764404 158.81868 LI
0 0.45 ST
49 execuserobject setfont
0 846.525574 168.024933 MG
(Q) show
49 execuserobject setfont
0 893.250793 159.024933 MG
(Q) show
49 execuserobject setfont
0 941.117554 162.024933 MG
(Q) show
1000.342651 183.024933 1000.342651 158.81868 LI
0 0.45 ST
49 execuserobject setfont
0 1012.197144 162.024933 MG
(H) show
49 execuserobject setfont
0 1072.935059 168.024933 MG
(Q) show
49 execuserobject setfont
0 1065.559082 168.024933 MG
(#) show
1102.77478 183.024933 1102.77478 158.81868 LI
0 0.45 ST
1102.479248 237.471252 118.225693 237.471252 LI
1102.479248 245.471252 118.225693 245.471252 LI
1102.479248 253.471252 118.225693 253.471252 LI
1102.479248 261.471252 118.225693 261.471252 LI
1102.479248 269.471252 118.225693 269.471252 LI
0 0.55 ST
/Sonata findfont 32 scalefont [1 0 0 -1 0 0] makefont
50
exch
defineuserobject
50 execuserobject setfont
0 122.225693 269.746246 MG
(&) show
0 152.137695 300.502258 MG
/Times-Roman findfont 22 scalefont [1 0 0 -1 0 0] makefont
72
exch
defineuserobject
72 execuserobject setfont
(sur) show
72 execuserobject setfont
0 137.749695 300.502258 MG
(-) show
72 execuserobject setfont
0 183.125702 300.502258 MG
(-) show
50 execuserobject setfont
0 160.337692 249.746246 MG
(Q) show
0 194.357697 300.502258 MG
72 execuserobject setfont
(ge) show
50 execuserobject setfont
0 199.557693 249.746246 MG
(Q) show
0 224.583694 300.502258 MG
72 execuserobject setfont
(psal) show
72 execuserobject setfont
0 264.640717 300.502258 MG
(-) show
50 execuserobject setfont
0 236.783691 253.746246 MG
(Q) show
267.484314 269.746246 267.484314 237.471252 LI
0 0.6 ST
0 276.383698 300.502258 MG
72 execuserobject setfont
(te) show
72 execuserobject setfont
0 307.454987 300.502258 MG
(-) show
50 execuserobject setfont
0 278.58371 249.746246 MG
(Q) show
50 execuserobject setfont
0 291.191711 249.746246 MG
(.) show
0 329.770294 300.502258 MG
72 execuserobject setfont
(ri) show
72 execuserobject setfont
0 346.688293 300.502258 MG
(-) show
50 execuserobject setfont
0 330.970306 249.746246 MG
(E) show
0 357.292297 300.502258 MG
72 execuserobject setfont
(um,) show
50 execuserobject setfont
0 362.49231 261.746246 MG
(q) show
408.052307 269.746246 408.052307 237.471252 LI
0 0.6 ST
0 413.960724 300.502258 MG
72 execuserobject setfont
(ex) show
72 execuserobject setfont
0 438.599731 300.502258 MG
(-) show
50 execuserobject setfont
0 417.160736 261.746246 MG
(q) show
0 449.598724 300.502258 MG
72 execuserobject setfont
(sur) show
72 execuserobject setfont
0 481.706726 300.502258 MG
(-) show
50 execuserobject setfont
0 457.798737 249.746246 MG
(Q) show
0 494.058716 300.502258 MG
72 execuserobject setfont
(ge) show
50 execuserobject setfont
0 499.258728 245.746246 MG
(Q) show
529.239746 269.746246 529.239746 237.471252 LI
0 0.6 ST
0 533.280884 300.502258 MG
72 execuserobject setfont
(cy) show
72 execuserobject setfont
0 600.68512 300.502258 MG
(-) show
72 execuserobject setfont
0 650.885376 300.502258 MG
(-) show
72 execuserobject setfont
0 701.085632 300.502258 MG
(-) show
72 execuserobject setfont
0 751.285889 300.502258 MG
(-) show
72 execuserobject setfont
0 801.486145 300.502258 MG
(-) show
72 execuserobject setfont
0 851.686401 300.502258 MG
(-) show
72 execuserobject setfont
0 901.886658 300.502258 MG
(-) show
50 execuserobject setfont
0 538.480896 249.746246 MG
<cf> show
50 execuserobject setfont
0 560.611023 241.746246 MG
<cf> show
50 execuserobject setfont
0 584.54425 245.746246 MG
<cf> show
50 execuserobject setfont
0 608.477661 249.746246 MG
<cf> show
50 execuserobject setfont
0 632.411072 253.746246 MG
<cf> show
50 execuserobject setfont
0 656.344421 245.746246 MG
<cf> show
680.898926 269.746246 680.898926 237.471252 LI
0 0.6 ST
50 execuserobject setfont
0 691.459961 249.746246 MG
<cf> show
50 execuserobject setfont
0 714.821655 245.746246 MG
<cf> show
50 execuserobject setfont
0 738.755005 241.746246 MG
<cf> show
50 execuserobject setfont
0 762.688293 249.746246 MG
<cf> show
50 execuserobject setfont
0 786.621765 245.746246 MG
<cf> show
50 execuserobject setfont
0 810.555115 249.746246 MG
<cf> show
834.764404 269.746246 834.764404 237.471252 LI
0 0.6 ST
50 execuserobject setfont
0 845.325562 253.746246 MG
<cf> show
50 execuserobject setfont
0 868.117371 257.746246 MG
<cf> show
50 execuserobject setfont
0 892.050781 253.746246 MG
(q) show
50 execuserobject setfont
0 904.658752 249.746246 MG
(.) show
0 955.65094 300.502258 MG
72 execuserobject setfont
(tha) show
72 execuserobject setfont
0 990.10199 300.502258 MG
(-) show
50 execuserobject setfont
0 963.850952 257.746246 MG
(e) show
1000.342651 269.746246 1000.342651 237.471252 LI
0 0.6 ST
0 1004.797119 300.502258 MG
72 execuserobject setfont
(ra.) show
50 execuserobject setfont
0 1010.997131 257.746246 MG
(h) show
50 execuserobject setfont
0 1072.422974 253.746246 MG
<ce> show
1102.77478 269.746246 1102.77478 237.471252 LI
0 0.6 ST
1102.479248 329.023254 118.225693 329.023254 LI
1102.479248 337.023254 118.225693 337.023254 LI
1102.479248 345.023254 118.225693 345.023254 LI
1102.479248 353.023254 118.225693 353.023254 LI
1102.479248 361.023254 118.225693 361.023254 LI
0 0.55 ST
50 execuserobject setfont
0 122.225693 361.298248 MG
(?) show
50 execuserobject setfont
0 160.337692 349.298248 MG
(h) show
50 execuserobject setfont
0 236.783691 361.298248 MG
(q) show
267.484314 361.298248 267.484314 329.023254 LI
0 0.6 ST
50 execuserobject setfont
0 278.58371 349.298248 MG
(q) show
50 execuserobject setfont
0 312.760132 349.298248 MG
(q) show
50 execuserobject setfont
0 362.49231 333.298248 MG
(Q) show
408.052307 361.298248 408.052307 329.023254 LI
0 0.6 ST
50 execuserobject setfont
0 417.160736 349.298248 MG
(q) show
50 execuserobject setfont
0 429.768738 349.298248 MG
(.) show
50 execuserobject setfont
0 473.786743 349.298248 MG
(e) show
50 execuserobject setfont
0 499.258728 361.298248 MG
(q) show
529.239746 361.298248 529.239746 329.023254 LI
0 0.6 ST
50 execuserobject setfont
0 538.480896 349.298248 MG
(q) show
50 execuserobject setfont
0 584.54425 337.298248 MG
(Q) show
50 execuserobject setfont
0 632.411072 333.298248 MG
(Q) show
680.898926 361.298248 680.898926 329.023254 LI
0 0.6 ST
50 execuserobject setfont
0 691.459961 329.298248 MG
(H) show
50 execuserobject setfont
0 786.621765 345.298248 MG
(Q) show
834.764404 361.298248 834.764404 329.023254 LI
0 0.6 ST
50 execuserobject setfont
0 845.325562 337.298248 MG
(Q) show
50 execuserobject setfont
0 892.050781 345.298248 MG
(Q) show
50 execuserobject setfont
0 939.917542 341.298248 MG
(Q) show
1000.342651 361.298248 1000.342651 329.023254 LI
0 0.6 ST
50 execuserobject setfont
0 1010.997131 357.298248 MG
(h) show
50 execuserobject setfont
0 1071.734985 357.298248 MG
(q) show
1102.77478 361.298248 1102.77478 329.023254 LI
0 0.6 ST
118.225693 361.298248 118.225693 97.89106 LI
0 1 ST
0 setgray
110.625694 97.89106 3.6 85.133873 rectfill
49 execuserobject setfont
0 110.625694 97.89106 MG
<c2> show
49 execuserobject setfont
0 110.625694 183.024933 MG
(L) show
0 83.42569 112.019058 MG
/Times-Italic findfont 16 scalefont [1 0 0 -1 0 0] makefont
53
exch
defineuserobject
53 execuserobject setfont
(96) show
0 75.42569 493.777222 MG
53 execuserobject setfont
(103) show
0 74.225693 869.5802 MG
53 execuserobject setfont
(110) show
0 74.225693 1283.654785 MG
53 execuserobject setfont
(117) show
0 setgray
48.466797 -3 0 763.888306 114.891052 slant
fill
764.188293 114.891052 764.188293 96.39106 LI
0 0.6 ST
788.121765 114.891052 788.121765 99.39106 LI
0 0.6 ST
812.055115 114.891052 812.055115 96.39106 LI
0 0.6 ST
0 setgray
23.487671 -3 0 363.692291 191.024933 slant
fill
363.99231 191.024933 363.99231 172.524933 LI
0 0.6 ST
386.879974 191.024933 386.879974 172.524933 LI
0 0.6 ST
0 setgray
23.591797 4 1.999908 854.125549 226.781342 slant
fill
854.525574 226.815247 854.525574 251.746246 LI
0 0.8 ST
877.317383 228.747345 877.317383 255.746246 LI
0 0.8 ST
0 setgray
119.895142 -4 0 691.459961 276.746246 slant
fill
691.859924 276.746246 691.859924 251.746246 LI
0 0.8 ST
715.221619 276.746246 715.221619 247.746246 LI
0 0.8 ST
739.154968 276.746246 739.154968 243.746246 LI
0 0.8 ST
763.088257 276.746246 763.088257 251.746246 LI
0 0.8 ST
787.021729 276.746246 787.021729 247.746246 LI
0 0.8 ST
810.955078 276.746246 810.955078 251.746246 LI
0 0.8 ST
0 setgray
118.663513 -4 0 538.480896 276.746246 slant
fill
538.880859 276.746246 538.880859 251.746246 LI
0 0.8 ST
561.010986 276.746246 561.010986 243.746246 LI
0 0.8 ST
584.944214 276.746246 584.944214 247.746246 LI
0 0.8 ST
608.877625 276.746246 608.877625 251.746246 LI
0 0.8 ST
632.811035 276.746246 632.811035 255.746246 LI
0 0.8 ST
656.744385 276.746246 656.744385 247.746246 LI
0 0.8 ST
grestore
%%Trailer
%%DocumentFonts: Times-Italic
%%+ Times-Roman
%%+ Sonata

%%EndDocument
count __NXEPSOpCount sub {pop} repeat countdictstack __NXEPSDictCount sub {end} repeat __NXEPSSave restore
grestore
grestore
grestore
grestore
grestore
%%Trailer
%%DocumentFonts: Sonata
%%+ Times-Italic

%%EndDocument
count __NXEPSOpCount sub {pop} repeat countdictstack __NXEPSDictCount sub {end} repeat __NXEPSSave restore
grestore
grestore
grestore
%%Trailer
%%DocumentFonts: Sonata
