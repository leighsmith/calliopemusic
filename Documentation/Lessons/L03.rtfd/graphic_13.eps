%!PS-Adobe-2.0 EPSF-2.0
%%Title: 
%%Creator: OpenWrite
%%CreationDate: Mon Jul 29 15:59:45 1996
%%For: wfc
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 0 0 434 199
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.1
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{2 copy 3 ne or{_NXDoImageOp}{4 index dup 8 ne exch 4 ne and{_NXDoImageOp}{
		pop pop save 6 1 roll 12 dict begin/Proc exch def/Res 0 string def
		/Alloc{2 index length mul 2 add dup 2 index load length gt{1.2 mul round cvi string def}{pop pop}ifelse}def
		1 index 8 eq{/Unpack{.34 Alloc}def}{
			/Wid 4 index 3 mul def exch pop 8 exch/Str1 0 string def/Lim Wid def
			/Unpack{.67 Alloc/Str1 2 Alloc 0 exch Lim exch
				{dup -4 bitshift 17 mul Str1 exch 4 index exch put 15 and 17 mul Str1 exch 3 index 1 add exch put
				2 sub dup 0 le{0 lt Wid exch{exch 1 sub exch}if}if exch 2 add exch
				}forall/Lim exch def Str1 exch 0 exch getinterval
			}def
		}ifelse
		/Ops[{.3 mul add 1}{.59 mul add 2}{.11 mul add round cvi Res exch 2 index exch put 1 add 0.0 0}]def/Val 0.0 def/Phase 0 def
		{0 Val Phase Proc/Res Unpack{exch Ops exch get exec}forall/Phase exch def/Val exch def Res exch 0 exch getinterval}
		image end restore}ifelse}ifelse
	}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

gsave
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
%%EndSetup
gsave
0 0 1000 1000 rectclip
0 0 434 199 rectclip
0.000000 0.000000 transform
gsave __NXbasematrix setmatrix itransform translate
0 0 434 199 rectclip
0 0 translate
0 rotate
0.620887 0.620887 scale
gsave
-23 -621 translate

/__NXEPSSave save def /showpage {} def
_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
/_NXcimage where{pop}{/_NXcimage /colorimage load def}ifelse /colorimage{dup 3 eq{true 2 index{1 index}{1}ifelse 7 add 1 roll _NXCalibratedImage}{_NXcimage}ifelse}def}if
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath count /__NXEPSOpCount exch def /__NXEPSDictCount countdictstack def
%%BeginDocument: /Users/wfc/CalliopeDocs/Tutorial/Lessons/tutorial.openbook/Lesson 3: Text Boxes.open/graphic_13.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: cima.opus
%%Creator: Calliope
%%CreationDate: Mon Jul 17 16:05:45 1995
%%For: wfc
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 23 621 722 941
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.1
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{2 copy 3 ne or{_NXDoImageOp}{4 index dup 8 ne exch 4 ne and{_NXDoImageOp}{
		pop pop save 6 1 roll 12 dict begin/Proc exch def/Res 0 string def
		/Alloc{2 index length mul 2 add dup 2 index load length gt{1.2 mul round cvi string def}{pop pop}ifelse}def
		1 index 8 eq{/Unpack{.34 Alloc}def}{
			/Wid 4 index 3 mul def exch pop 8 exch/Str1 0 string def/Lim Wid def
			/Unpack{.67 Alloc/Str1 2 Alloc 0 exch Lim exch
				{dup -4 bitshift 17 mul Str1 exch 4 index exch put 15 and 17 mul Str1 exch 3 index 1 add exch put
				2 sub dup 0 le{0 lt Wid exch{exch 1 sub exch}if}if exch 2 add exch
				}forall/Lim exch def Str1 exch 0 exch getinterval
			}def
		}ifelse
		/Ops[{.3 mul add 1}{.59 mul add 2}{.11 mul add round cvi Res exch 2 index exch put 1 add 0.0 0}]def/Val 0.0 def/Phase 0 def
		{0 Val Phase Proc/Res Unpack{exch Ops exch get exec}forall/Phase exch def/Val exch def Res exch 0 exch getinterval}
		image end restore}ifelse}ifelse
	}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

gsave
-20 257.339966 translate
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/TP {
    transform round exch round exch itransform
} bind def /LI {
    moveto lineto
} bind def /ST {
    setlinewidth setgray stroke
} bind def /MG {
    moveto setgray
} bind def /slant {
    moveto 2 index 1 index rlineto 0 2 index rlineto 2 index neg 1 index neg rlineto closepath pop pop pop
} bind def /tie {
    scale newpath 0 0 1 10 170 arc 1 exch scale 0 0 1 170 10 arcn
} bind def /tietext {
    gsave currentpoint 3 -1 roll add exch 3 -1 roll add exch newpath gsave translate scale 0 0 1 5 175 arc 1 exch scale 0 0 1 175 5 arcn fill grestore grestore 0 rmoveto
} bind def
%%EndSetup
gsave
[0.73125 0 0 -0.73125 0 1069.339966] concat
31.45299 176.410217 955.897339 436.239319 rectclip
970.294312 404.614105 187.569199 404.614105 LI
970.294312 412.614105 187.569199 412.614105 LI
970.294312 420.614105 187.569199 420.614105 LI
970.294312 428.614105 187.569199 428.614105 LI
970.294312 436.614105 187.569199 436.614105 LI
0 0.55 ST
0.333333 978.844299 436.889099 MG
/Times-Roman findfont 16 scalefont [1 0 0 -1 0 0] makefont
47
exch
defineuserobject
47 execuserobject setfont
(1) show
/Sonata findfont 32 scalefont [1 0 0 -1 0 0] makefont
48
exch
defineuserobject
48 execuserobject setfont
0 191.569199 436.889099 MG
(&) show
0 217.857208 413.201111 MG
48 execuserobject setfont
(4) show
0 217.681198 429.577087 MG
48 execuserobject setfont
(2) show
48 execuserobject setfont
0 246.353195 424.889099 MG
(q) show
48 execuserobject setfont
0 287.102905 408.889099 MG
(Q) show
48 execuserobject setfont
0 328.423981 416.889099 MG
(Q) show
48 execuserobject setfont
0 369.745026 424.889099 MG
(q) show
48 execuserobject setfont
0 382.353027 424.889099 MG
(.) show
48 execuserobject setfont
0 431.726624 420.889099 MG
<cf> show
48 execuserobject setfont
0 456.239075 416.889099 MG
<cf> show
48 execuserobject setfont
0 480.751587 412.889099 MG
<cf> show
48 execuserobject setfont
0 505.264099 408.889099 MG
(Q) show
48 execuserobject setfont
0 517.87207 408.889099 MG
(.) show
48 execuserobject setfont
0 578.801514 404.889099 MG
(E) show
601.534302 479.861267 601.534302 404.614105 LI
0 0.6 ST
48 execuserobject setfont
0 611.968506 400.889099 MG
(Q) show
48 execuserobject setfont
0 652.335083 396.889099 MG
(H) show
664.935059 396.889099 649.335083 396.889099 LI
0 0.8 ST
48 execuserobject setfont
0 734.977112 400.889099 MG
(Q) show
48 execuserobject setfont
0 776.298157 396.889099 MG
(Q) show
48 execuserobject setfont
0 788.906128 392.889099 MG
(.) show
788.898132 396.889099 773.298157 396.889099 LI
0 0.8 ST
48 execuserobject setfont
0 849.835632 400.889099 MG
(E) show
48 execuserobject setfont
0 874.348083 404.889099 MG
(H) show
970.320618 479.861267 970.320618 404.614105 LI
0 0.6 ST
970.294312 479.586273 187.569199 479.586273 LI
970.294312 487.586273 187.569199 487.586273 LI
970.294312 495.586273 187.569199 495.586273 LI
970.294312 503.586273 187.569199 503.586273 LI
970.294312 511.586273 187.569199 511.586273 LI
0 0.55 ST
0.333333 978.844299 511.861267 MG
47 execuserobject setfont
(2) show
48 execuserobject setfont
0 191.569199 511.861267 MG
(&) show
0 217.857208 488.173279 MG
48 execuserobject setfont
(4) show
0 217.681198 504.549255 MG
48 execuserobject setfont
(2) show
48 execuserobject setfont
0 246.145203 495.861267 MG
<ee> show
48 execuserobject setfont
0 328.423981 499.861267 MG
(q) show
48 execuserobject setfont
0 369.745026 483.861267 MG
(Q) show
48 execuserobject setfont
0 411.066101 491.861267 MG
(Q) show
48 execuserobject setfont
0 456.239075 499.861267 MG
(q) show
48 execuserobject setfont
0 468.847076 499.861267 MG
(.) show
48 execuserobject setfont
0 529.77655 495.861267 MG
<cf> show
48 execuserobject setfont
0 554.289001 491.861267 MG
<cf> show
48 execuserobject setfont
0 578.801514 487.861267 MG
<cf> show
601.534302 554.833679 601.534302 479.586273 LI
0 0.6 ST
48 execuserobject setfont
0 611.968506 483.861267 MG
(Q) show
48 execuserobject setfont
0 652.335083 491.861267 MG
(Q) show
48 execuserobject setfont
0 693.656128 495.861267 MG
(h) show
48 execuserobject setfont
0 776.298157 499.861267 MG
<cf> show
48 execuserobject setfont
0 800.810608 503.861267 MG
<cf> show
48 execuserobject setfont
0 825.32312 507.861267 MG
<cf> show
48 execuserobject setfont
0 849.835632 503.861267 MG
<cf> show
48 execuserobject setfont
0 874.348083 499.861267 MG
<cf> show
48 execuserobject setfont
0 898.860596 503.861267 MG
<cf> show
48 execuserobject setfont
0 923.373047 499.861267 MG
<cf> show
48 execuserobject setfont
0 947.885559 495.861267 MG
<cf> show
970.320618 554.833679 970.320618 479.586273 LI
0 0.6 ST
970.294312 554.558655 187.569199 554.558655 LI
970.294312 562.558655 187.569199 562.558655 LI
970.294312 570.558655 187.569199 570.558655 LI
970.294312 578.558655 187.569199 578.558655 LI
970.294312 586.558655 187.569199 586.558655 LI
0 0.55 ST
0.333333 978.844299 586.833679 MG
47 execuserobject setfont
(3) show
48 execuserobject setfont
0 191.569199 586.833679 MG
(?) show
0 217.857208 563.145691 MG
48 execuserobject setfont
(4) show
0 217.681198 579.521667 MG
48 execuserobject setfont
(2) show
48 execuserobject setfont
0 244.561203 554.833679 MG
(w) show
48 execuserobject setfont
0 409.274078 554.833679 MG
(w) show
601.534302 586.833679 601.534302 554.558655 LI
0 0.6 ST
48 execuserobject setfont
0 610.176514 566.833679 MG
(w) show
48 execuserobject setfont
0 774.506165 562.833679 MG
(w) show
970.320618 586.833679 970.320618 554.558655 LI
0 0.6 ST
gsave
/Times-Roman findfont 36 scalefont [1 0 0 -1 0 0] makefont
114
exch
defineuserobject
114 execuserobject setfont
0 nxsetgray
/Times-Roman findfont 18 scalefont [1 0 0 -1 0 0] makefont
50
exch
defineuserobject
50 execuserobject setfont
0 nxsetgray
59.884598 577.333679 moveto (Violono) show
grestore
gsave
50 execuserobject setfont
0 nxsetgray
50 execuserobject setfont
0 nxsetgray
58.384598 502.361267 moveto (Cornetto) show
grestore
gsave
50 execuserobject setfont
0 nxsetgray
50 execuserobject setfont
0 nxsetgray
61.884598 427.389099 moveto (Violino) show
grestore
0 setgray
178.769196 404.889099 4.8 181.94458 rectfill
48 execuserobject setfont
0 178.769196 404.889099 MG
<c2> show
48 execuserobject setfont
0 178.769196 586.833679 MG
(L) show
gsave
50 execuserobject setfont
0 nxsetgray
114 execuserobject setfont
0 nxsetgray
441.683655 241.889099 moveto (Sonata \325 3) show
grestore
gsave
114 execuserobject setfont
0 nxsetgray
/Times-Roman findfont 24 scalefont [1 0 0 -1 0 0] makefont
115
exch
defineuserobject
115 execuserobject setfont
0 nxsetgray
373.683655 290.889099 moveto (Violino, Cornetto, & Violono) show
grestore
gsave
115 execuserobject setfont
0 nxsetgray
50 execuserobject setfont
0 nxsetgray
810.844299 369.889099 moveto (Giovanni Paolo Cima) show
grestore
gsave
50 execuserobject setfont
0 nxsetgray
/Times-Italic findfont 18 scalefont [1 0 0 -1 0 0] makefont
51
exch
defineuserobject
51 execuserobject setfont
0 nxsetgray
189.569199 360.889099 moveto (Concerti Ecclesiastici) show
189.569199 380.889099 moveto (Milano, 1610) show
grestore
187.569199 586.833679 187.569199 404.889099 LI
0 1 ST
0 34.523067 670.961609 MG
/Times-Italic findfont 16 scalefont [1 0 0 -1 0 0] makefont
80
exch
defineuserobject
80 execuserobject setfont
(3) show
0 34.523067 927.950195 MG
80 execuserobject setfont
(5) show
0 34.523067 1179.950317 MG
80 execuserobject setfont
(7) show
0 setgray
49.824951 -4 -4.003387 431.726624 447.856445 slant
fill
432.126617 447.82431 432.126617 422.889099 LI
0 0.8 ST
456.639069 445.854736 456.639069 418.889099 LI
0 0.8 ST
481.151581 443.885193 481.151581 414.889099 LI
0 0.8 ST
0 setgray
74.337463 4 -2.401886 883.148071 471.276245 slant
fill
883.548096 471.263306 883.548096 497.861267 LI
0 0.8 ST
908.060608 470.471313 908.060608 501.861267 LI
0 0.8 ST
932.573059 469.679291 932.573059 497.861267 LI
0 0.8 ST
957.085571 468.887268 957.085571 493.861267 LI
0 0.8 ST
0 setgray
74.337463 4 2.398804 785.098145 472.874329 slant
fill
785.498169 472.887238 785.498169 497.861267 LI
0 0.8 ST
810.01062 473.678223 810.01062 501.861267 LI
0 0.8 ST
834.523132 474.469238 834.523132 505.861267 LI
0 0.8 ST
859.035645 475.260223 859.035645 501.861267 LI
0 0.8 ST
0 setgray
49.824951 -4 -4.001526 529.77655 522.828613 slant
fill
530.176514 522.796509 530.176514 497.861267 LI
0 0.8 ST
554.688965 520.82782 554.688965 493.861267 LI
0 0.8 ST
579.201477 518.859192 579.201477 489.861267 LI
0 0.8 ST
251.153198 548.833679 moveto
267.624481 536.833679 399.394775 536.833679 415.866089 548.833679 curveto
399.394775 534.833679 267.624481 534.833679 251.153198 548.833679 curveto
closepath
0 setgray
fill
grestore
%%Trailer
%%DocumentFonts: Times-Italic
%%+ Times-Roman
%%+ Sonata

%%EndDocument
count __NXEPSOpCount sub {pop} repeat countdictstack __NXEPSDictCount sub {end} repeat __NXEPSSave restore
grestore
grestore
grestore
%%Trailer
%%DocumentFonts: Sonata
